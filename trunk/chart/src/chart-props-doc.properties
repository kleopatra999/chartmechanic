#
#Sun Aug 29 12:45:16 PDT 2010
org.jfree.chart.renderer.category.CategoryItemRenderer.baseSeriesVisibleInLegend=Sets the base visibility in the legend and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.axis.LogarithmicAxis.expTickLabelsFlag=Sets the 'expTickLabelsFlag' flag.  If the 'log10TickLabelsFlag'\n is false then this will set whether or not "1e\#"-style tick labels\n are used.  The default is to use regular numeric tick labels.
org.jfree.chart.title.TextTitle.maximumLinesToDisplay=Sets the maximum number of lines to display and sends a\n {@link TitleChangeEvent} to all registered listeners.
org.jfree.chart.plot.Crosshair.labelOutlinePaint=Sets the label outline paint and sends a property change event (with the\n name "labelOutlinePaint") to all registered listeners.
org.jfree.chart.plot.PolarPlot.radiusGridlineStroke=Sets the stroke for the grid lines plotted against the radius axis and\n sends a {@link PlotChangeEvent} to all registered listeners.\n <p>\n If you set this to <code>null</code>, no grid lines will be drawn.
org.jfree.chart.plot.CombinedRangeXYPlot.class=An extension of {@link XYPlot} that contains multiple subplots that share a\n common range axis.
org.jfree.chart.renderer.xy.CandlestickRenderer.maxCandleWidthInMilliseconds=Sets the maximum candle width (in milliseconds) and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.axis.ExtendedCategoryAxis.class=An extended version of the {@link CategoryAxis} class that supports\n sublabels on the axis.
org.jfree.chart.plot.PiePlot.labelGap=Sets the gap between the edge of the pie and the labels (expressed as a\n percentage of the plot width) and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.AbstractRenderer.shape=Sets the shape for ALL series (optional) and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.rangeCrosshairVisible=Sets the flag indicating whether or not the range crosshair is visible.\n If the flag value changes, this method sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.PolarPlot.radiusGridlinesVisible=Sets the flag that controls whether or not the radius axis grid lines\n are visible.\n <p>\n If the flag value is changed, a {@link PlotChangeEvent} is sent to all\n registered listeners.
org.jfree.chart.plot.ColorPalette.stepped=Sets the stepped flag.
org.jfree.chart.plot.CategoryPlot.rangeZeroBaselineStroke=Sets the stroke for the zero baseline for the range axis,\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.stroke=Sets the stroke for ALL series and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.PiePlot.baseSectionOutlinePaint=Sets the base section paint.
org.jfree.chart.title.LegendTitle.legendItemGraphicEdge=Sets the location of the shape within each legend item.
org.jfree.chart.axis.SubCategoryAxis.subLabelPaint=Sets the paint used to display the sub-category labels and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.HighLowRenderer.drawCloseTicks=Sets the flag that controls whether close ticks are drawn, and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYSplineRenderer.precision=Set the resolution of splines and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.category.CategoryItemRenderer.baseShape=Sets the base shape and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.title.TextTitle.expandToFitSpace=Sets the flag that controls whether the title expands to fit the\n available space, and sends a {@link TitleChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.PiePlotState.passesRequired=Sets the number of passes required by the renderer.
org.jfree.chart.renderer.xy.DeviationRenderer.drawSeriesLineAsPath=This method is overridden so that this flag cannot be changed---it is\n set to <code>true</code> for this renderer.
org.jfree.chart.title.TextTitle.URLText=Sets the URL text to the specified text and sends a\n {@link TitleChangeEvent} to all registered listeners.
org.jfree.chart.plot.CombinedRangeCategoryPlot.class=A combined category plot where the range axis is shared.
org.jfree.chart.plot.CategoryPlot.rangeAxisLocation=Sets the location of the range axis and sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.CategoryPlot.domainGridlinePaint=Sets the paint used to draw the grid-lines (if any) against the domain\n axis and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.CategoryPlot.weight=Sets the weight for the plot and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.XYBarRenderer.shadowYOffset=Sets the y-offset for the bar shadow and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlotState.pieWRadius=Sets the horizontal pie radius.
org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesPaint=Sets the flag that controls whether or not the series paint list is\n automatically populated when {@link \#lookupSeriesPaint(int)} is called.
org.jfree.chart.plot.ThermometerPlot.gap=Sets the gap (in Java2D units) between the two outlines that represent\n the thermometer, and sends a {@link PlotChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.xy.XYStepAreaRenderer.class=A step chart renderer that fills the area between the step and the x-axis.\n The example shown here is generated by the\n <code>XYStepAreaRendererDemo1.java</code> program included in the JFreeChart\n demo collection\:\n <br><br>\n <img src\="../../../../../images/XYStepAreaRendererSample.png"\n alt\="XYStepAreaRendererSample.png" />
org.jfree.chart.plot.PieLabelRecord.baseY=Sets the base y-coordinate.
org.jfree.chart.plot.Crosshair.class=A crosshair for display on a plot.
org.jfree.chart.plot.PiePlot.maximumLabelWidth=Sets the maximum label width as a percentage of the plot width and sends\n a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.AxisState.class=Instances of this class are used to carry state information for an axis\n during the drawing process.  By retaining this information in a separate\n object, it is possible for multiple threads to draw the same axis to\n different output targets (each drawing will maintain separate state\n information).
org.jfree.chart.plot.RingPlot.class=A customised pie plot that leaves a hole in the middle.
org.jfree.chart.plot.RingPlot.separatorPaint=Sets the paint used to draw the separator between sections and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.LogAxis.base=Sets the base for the logarithm calculation and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.axis.SegmentedTimeline.startTime=Sets the start time for the timeline. This is the beginning of segment\n zero.
org.jfree.chart.plot.CategoryPlot.anchorValue=Sets the anchor value and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.title.TextTitle.backgroundPaint=Sets the background paint and sends a {@link TitleChangeEvent} to all\n registered listeners.  If you set this attribute to <code>null</code>,\n no background is painted (which makes the title background transparent).
org.jfree.chart.renderer.category.CategoryItemRendererState.visibleSeriesArray=Sets an array with the indices of the visible rows.
org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.boxWidth=Sets the box width and sends a {@link RendererChangeEvent} to all\n registered listeners.\n <P>\n If you set the width to a negative value, the renderer will calculate\n the box width automatically based on the space available on the chart.
org.jfree.chart.renderer.xy.XYStepAreaRenderer.shapesVisible=Sets the flag that controls whether or not shapes are displayed for each\n data item, and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.category.CategoryItemRenderer.baseSeriesVisible=Sets the base visibility and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.category.CategoryItemRenderer.baseItemLabelsVisible=Sets the base setting for item label visibility and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.MeterPlot.tickPaint=Sets the paint used to draw the tick labels around the dial and sends\n a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYDifferenceRenderer.positivePaint=Sets the paint used to highlight positive differences and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.MeterPlot.drawBorder=Sets the flag that controls whether or not a rectangular border is drawn\n around the plot area and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.axis.CyclicNumberAxis.period=The cycle bound is a multiple of the period, plus optionally a start\n offset.\n <P>\n <pre>cb \= n * period + offset</pre><br>
org.jfree.chart.renderer.xy.XYLine3DRenderer.YOffset=Sets the y-offset and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.title.TextTitle.class=A chart title that displays a text string with automatic wrapping as\n required.
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.baseLinesVisible=Sets the base 'lines visible' flag and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.labelPadding=Sets the padding between each label and its outline and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.CategoryPlot.class=A general plotting class that uses data from a {@link CategoryDataset} and\n renders each data item using a {@link CategoryItemRenderer}.
org.jfree.chart.renderer.category.LineAndShapeRenderer.itemMargin=Sets the item margin, which is the gap between items within a category\n (expressed as a percentage of the overall category width), and sends\n a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.itemLabelAnchorOffset=Sets the item label anchor offset.
org.jfree.chart.plot.CategoryPlot.domainGridlinesVisible=Sets the flag that controls whether or not grid-lines are drawn against\n the domain axis.\n <p>\n If the flag value changes, a {@link PlotChangeEvent} is sent to all\n registered listeners.
org.jfree.chart.plot.XYPlot.orientation=Sets the orientation for the plot and sends a {@link PlotChangeEvent} to\n all registered listeners.
org.jfree.chart.plot.Plot.backgroundImageAlignment=Sets the alignment for the background image and sends a\n {@link PlotChangeEvent} to all registered listeners.  Alignment options\n are defined by the {@link org.jfree.ui.Align} class in the JCommon\n class library.
org.jfree.chart.plot.XYPlot.domainCrosshairValue=Sets the domain crosshair value and sends a {@link PlotChangeEvent} to\n all registered listeners (provided that the domain crosshair is visible).
org.jfree.chart.plot.JThermometer.valueFont=Sets the value font.
org.jfree.chart.plot.PiePlotState.pieCenterY=Sets the y-coordinate of the center of the pie chart.  This method is\n used by the plot and typically is not called directly by applications.
org.jfree.chart.plot.PiePlotState.pieCenterX=Sets the x-coordinate of the center of the pie chart.
org.jfree.chart.renderer.xy.XYItemRenderer.baseShape=Sets the base shape and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.CompassPlot.roseCenterPaint=Sets the paint used to fill the inner background area of the compass,\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.rangeGridlinesVisible=Sets the flag that controls whether or not the range axis grid lines\n are visible.\n <p>\n If the flag value is changed, a {@link PlotChangeEvent} is sent to all\n registered listeners.
org.jfree.chart.block.AbstractBlock.class=A convenience class for creating new classes that implement\n the {@link Block} interface.
org.jfree.chart.plot.XYPlot.domainZeroBaselineVisible=Sets the flag that controls whether or not the zero baseline is\n displayed for the domain axis, and sends a {@link PlotChangeEvent} to\n all registered listeners.
org.jfree.chart.axis.Axis.tickLabelFont=Sets the font for the tick labels and sends an {@link AxisChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.xy.XYBarRenderer.XYBarRendererState.class=The state class used by this renderer.
org.jfree.chart.plot.CategoryPlot.domainCrosshairStroke=Sets the stroke used to draw the domain crosshair, and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.Axis.tickMarkInsideLength=Sets the inside length of the tick marks and sends\n an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.groupStroke=Sets the stroke of the line between the minimum value and the maximum\n value and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.Marker.label=Sets the label (if <code>null</code> no label is displayed) and sends a\n {@link MarkerChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.HighLowRenderer.class=A renderer that draws high/low/open/close markers on an {@link XYPlot}\n (requires a {@link OHLCDataset}).  This renderer does not include code to\n calculate the crosshair point for the plot.\n\n The example shown here is generated by the\n <code>HighLowChartDemo1.java</code> program included in the JFreeChart Demo\n Collection\:\n <br><br>\n <img src\="../../../../../images/HighLowRendererSample.png"\n alt\="HighLowRendererSample.png" />
org.jfree.chart.plot.XYPlot.domainPannable=Sets the flag that enables or disables panning of the plot along the\n domain axes.
org.jfree.chart.plot.PiePlot.sectionOutlinesVisible=Sets the flag that controls whether or not the outline is drawn for\n each pie section, and sends a {@link PlotChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.XYPlot.domainMinorGridlinesVisible=Sets the flag that controls whether or not the domain minor grid-lines\n are visible.\n <p>\n If the flag value is changed, a {@link PlotChangeEvent} is sent to all\n registered listeners.
org.jfree.chart.plot.MultiplePiePlot.aggregatedItemsPaint=Sets the paint used to draw the pie section representing the aggregated\n items and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.rangeZeroBaselineStroke=Sets the stroke for the zero baseline for the range axis,\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.ContourPlot.domainCrosshairStroke=Sets the Stroke used to draw the crosshairs (if visible) and notifies\n registered listeners that the axis has been modified.
org.jfree.chart.plot.JThermometer.valueFormat=Sets the value format for the thermometer.
org.jfree.chart.plot.ContourPlot.colorBarLocation=Sets the color bar location and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.PolarPlot.radiusGridlinePaint=Sets the paint for the grid lines plotted against the radius axis and\n sends a {@link PlotChangeEvent} to all registered listeners.\n <p>\n If you set this to <code>null</code>, no grid lines will be drawn.
org.jfree.chart.axis.Axis.label=Sets the label for the axis and sends an {@link AxisChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.XYBarRenderer.drawBarOutline=Sets the flag that controls whether or not bar outlines are drawn and\n sends a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.LineRenderer3D.class=A line renderer with a 3D effect.  The example shown here is generated by\n the <code>LineChart3DDemo1.java</code> program included in the JFreeChart\n Demo Collection\:\n <br><br>\n <img src\="../../../../../images/LineRenderer3DSample.png"\n alt\="LineRenderer3DSample.png" />
org.jfree.chart.renderer.xy.XYBarRenderer.shadowVisible=Sets the flag that controls whether or not the renderer\n draws shadows for the bars, and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYStepRenderer.stepPoint=Sets the step point and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.PolarPlot.angleGridlinesVisible=Sets the flag that controls whether or not the angular grid-lines are\n visible.\n <p>\n If the flag value is changed, a {@link PlotChangeEvent} is sent to all\n registered listeners.
org.jfree.chart.axis.CyclicNumberAxis.advanceLineVisible=The advance line is the line drawn at the limit of the current cycle,\n when erasing the previous cycle.
org.jfree.chart.axis.NumberAxis.class=An axis for displaying numerical data.\n <P>\n If the axis is set up to automatically determine its range to fit the data,\n you can ensure that the range includes zero (statisticians usually prefer\n this) by setting the <code>autoRangeIncludesZero</code> flag to\n <code>true</code>.\n <P>\n The <code>NumberAxis</code> class has a mechanism for automatically\n selecting a tick unit that is appropriate for the current axis range.  This\n mechanism is an adaptation of code suggested by Laurence Vanhelsuwe.
org.jfree.chart.plot.XYPlot.rangeMinorGridlineStroke=Sets the stroke for the minor grid lines plotted against the range axis,\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.HighLowRenderer.drawOpenTicks=Sets the flag that controls whether open ticks are drawn, and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYDifferenceRenderer.class=A renderer for an {@link XYPlot} that highlights the differences between two\n series.  The example shown here is generated by the\n <code>DifferenceChartDemo1.java</code> program included in the JFreeChart\n demo collection\:\n <br><br>\n <img src\="../../../../../images/XYDifferenceRendererSample.png"\n alt\="XYDifferenceRendererSample.png" />
org.jfree.chart.renderer.AbstractRenderer.baseCreateEntities=Sets the base flag that controls whether entities are created\n for a series, and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.ColorPalette.minZ=Sets the minimum Z value.
org.jfree.chart.axis.ValueAxis.positiveArrowVisible=Sets a flag that controls whether or not the axis lines has an arrow\n drawn that points in the positive direction for the axis, and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.plot.CategoryPlot.domainGridlineStroke=Sets the stroke used to draw grid-lines against the domain axis and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYBlockRenderer.blockHeight=Sets the height of the blocks used to represent each data item and\n sends a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.class=A stacked area renderer for the {@link XYPlot} class.\n The example shown here is generated by the\n <code>StackedXYAreaChartDemo2.java</code> program included in the\n JFreeChart demo collection\:\n <br><br>\n <img src\="../../../../../images/StackedXYAreaRenderer2Sample.png"\n alt\="StackedXYAreaRenderer2Sample.png" />
org.jfree.chart.axis.ExtendedCategoryAxis.subLabelFont=Sets the font for the sublabels and sends an {@link AxisChangeEvent} to\n all registered listeners.
org.jfree.chart.plot.SpiderWebPlot.baseSeriesPaint=Sets the base series paint.
org.jfree.chart.renderer.xy.XYBlockRenderer.class=A renderer that represents data from an {@link XYZDataset} by drawing a\n color block at each (x, y) point, where the color is a function of the\n z-value from the dataset.  The example shown here is generated by the\n <code>XYBlockChartDemo1.java</code> program included in the JFreeChart\n demo collection\:\n <br><br>\n <img src\="../../../../../images/XYBlockRendererSample.png"\n alt\="XYBlockRendererSample.png" />
org.jfree.chart.renderer.xy.XYBarRenderer.barPainter=Sets the bar painter and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.CrosshairState.crosshairY=Sets the y coordinate for the crosshair.
org.jfree.chart.axis.Axis.labelInsets=Sets the insets for the axis label, and sends an {@link AxisChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.category.CategoryItemRenderer.baseOutlineStroke=Sets the base outline stroke and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.plot.CrosshairState.crosshairX=Sets the x coordinate for the crosshair.  This is the coordinate in data\n space measured against the domain axis.
org.jfree.chart.plot.SpiderWebPlot.headPercent=Sets the head percent and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.roundXCoordinates=Sets the flag that controls whether or not the x-coordinates (in\n Java2D space) are rounded to integer values, and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.CategoryItemRendererState.barWidth=Sets the bar width.  The renderer calculates this value and stores it\n here - it is not intended that users can manually set the bar width.
org.jfree.chart.renderer.category.ScatterRenderer.useSeriesOffset=Sets the flag that controls whether or not the x-position for each\n data item is offset within its category according to the series, and\n sends a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.axis.ValueAxis.upperBound=Sets the upper bound for the axis range, and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.StatisticalBarRenderer.errorIndicatorPaint=Sets the paint used for the error indicators (if <code>null</code>,\n the item outline paint is used instead) and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.GanttRenderer.class=A renderer for simple Gantt charts.  The example shown\n here is generated by the <code>GanttDemo1.java</code> program\n included in the JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/GanttRendererSample.png"\n alt\="GanttRendererSample.png" />
org.jfree.chart.axis.CyclicNumberAxis.offset=The cycle bound is a multiple of the period, plus optionally a start\n offset.\n <P>\n <pre>cb \= n * period + offset</pre><br>
org.jfree.chart.renderer.AbstractRenderer.basePaint=Sets the base paint and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.axis.Axis.labelPaint=Sets the paint used to draw the axis label and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.rangeCrosshairLockedOnData=Sets the flag indicating whether or not the range crosshair should\n "lock-on" to actual data values.  If the flag value changes, this method\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.Marker.labelOffset=Sets the label offset and sends a {@link MarkerChangeEvent} to all\n registered listeners.
org.jfree.chart.axis.DateAxis.class=The base class for axes that display dates.  You will find it easier to\n understand how this axis works if you bear in mind that it really\n displays/measures integer (or long) data, where the integers are\n milliseconds since midnight, 1-Jan-1970.  When displaying tick labels, the\n millisecond values are converted back to dates using a\n <code>DateFormat</code> instance.\n <P>\n You can also create a {@link org.jfree.chart.axis.Timeline} and supply in\n the constructor to create an axis that only contains certain domain values.\n For example, this allows you to create a date axis that only contains\n working days.
org.jfree.chart.renderer.category.StatisticalBarRenderer.errorIndicatorStroke=Sets the stroke used to draw the error indicators, and sends a\n {@link RendererChangeEvent} to all registered listeners.  If you set\n this to <code>null</code>, the renderer will use the item outline\n stroke.
org.jfree.chart.plot.CompassPlot.class=A specialised plot that draws a compass to indicate a direction based on the\n value from a {@link ValueDataset}.
org.jfree.chart.plot.JThermometer.outlinePaint=Sets the outline paint.
org.jfree.chart.plot.PiePlot.shadowXOffset=Sets the x-offset for the shadow effect and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYBarRenderer.margin=Sets the percentage amount by which the bars are trimmed and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.BarRenderer.drawBarOutline=Sets the flag that controls whether or not bar outlines are drawn and\n sends a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.SpiderWebPlot.axisLinePaint=Sets the paint used to draw the axis lines and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.minimumArcAngleToDraw=Sets the minimum arc angle that will be drawn.  Pie sections for an\n angle smaller than this are not drawn, to avoid a JDK bug.  See this\n link for details\:\n <br><br>\n <a href\="http\://www.jfree.org/phpBB2/viewtopic.php?t\=2707">\n http\://www.jfree.org/phpBB2/viewtopic.php?t\=2707</a>\n <br><br>\n ...and this bug report in the Java Bug Parade\:\n <br><br>\n <a href\=\n "http\://developer.java.sun.com/developer/bugParade/bugs/4836495.html">\n http\://developer.java.sun.com/developer/bugParade/bugs/4836495.html</a>
org.jfree.chart.JFreeChart.textAntiAlias=Sets the value in the rendering hints table for\n {@link RenderingHints\#KEY_TEXT_ANTIALIASING} to either\n {@link RenderingHints\#VALUE_TEXT_ANTIALIAS_ON} or\n {@link RenderingHints\#VALUE_TEXT_ANTIALIAS_OFF}, then sends a\n {@link ChartChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYBarRenderer.legendBar=Sets the shape used to represent bars in each legend item and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.PolarPlot.angleGridlineStroke=Sets the stroke for the grid lines plotted against the angular axis and\n sends a {@link PlotChangeEvent} to all registered listeners.\n <p>\n If you set this to <code>null</code>, no grid lines will be drawn.
org.jfree.chart.axis.AxisState.max=Sets the maximum width/height.
org.jfree.chart.renderer.xy.StackedXYBarRenderer.class=A bar renderer that displays the series items stacked.\n The dataset used together with this renderer must be a\n {@link org.jfree.data.xy.IntervalXYDataset} and a\n {@link org.jfree.data.xy.TableXYDataset}. For example, the\n dataset class {@link org.jfree.data.xy.CategoryTableXYDataset}\n implements both interfaces.\n\n The example shown here is generated by the\n <code>StackedXYBarChartDemo2.java</code> program included in the\n JFreeChart demo collection\:\n <br><br>\n <img src\="../../../../../images/StackedXYBarRendererSample.png"\n alt\="StackedXYBarRendererSample.png" />
org.jfree.chart.renderer.category.WaterfallBarRenderer.negativeBarPaint=Sets the paint that will be used to draw bars having negative values,\n and sends a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.axis.AxisSpace.class=A record that contains the space required at each edge of a plot.
org.jfree.chart.plot.XYPlot.rangePannable=Sets the flag that enables or disables panning of the plot along\n the range axes.
org.jfree.chart.plot.PiePlotState.class=A renderer state.
org.jfree.chart.plot.Plot.noDataMessagePaint=Sets the paint used to display the 'no data' message and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.ValueAxis.autoTickIndex=Sets the auto tick index.
org.jfree.chart.axis.LogAxis.smallestValue=Sets the smallest value represented by the axis and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.plot.CategoryPlot.domainAxisLocation=Sets the location of the domain axis and sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.axis.ValueAxis.leftArrow=Sets the shape that can be displayed as an arrow pointing left at the\n end of an axis line and sends an {@link AxisChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.XYAreaRenderer.outline=Sets a flag that controls whether or not outlines of the areas are drawn\n and sends a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYItemRenderer.class=Interface for rendering the visual representation of a single (x, y) item on\n an {@link XYPlot}.\n <p>\n To support cloning charts, it is recommended that renderers implement both\n the {@link Cloneable} and <code>PublicCloneable</code> interfaces.
org.jfree.chart.title.TextTitle.font=Sets the font used to display the title string.  Registered listeners\n are notified that the title has been modified.
org.jfree.chart.renderer.xy.SamplingXYLineRenderer.class=A renderer that...  This renderer is designed for use with the {@link XYPlot}\n class.
org.jfree.chart.plot.ThermometerPlot.bulbRadius=Sets the bulb radius (in Java2D units) and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.ThermometerPlot.valueLocation=Sets the location at which the current value is displayed and sends a\n {@link PlotChangeEvent} to all registered listeners.\n <P>\n The location can be one of the constants\:\n <code>NONE</code>,\n <code>RIGHT</code>\n <code>LEFT</code> and\n <code>BULB</code>.
org.jfree.chart.plot.XYPlot.rangeTickBandPaint=Sets the paint for the range tick bands.
org.jfree.chart.plot.RingPlot.separatorStroke=Sets the stroke used to draw the separator between sections and sends\n a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.seriesVisibleInLegend=Sets the flag that controls the visibility of ALL series in the legend\n and sends a {@link RendererChangeEvent} to all registered listeners.\n This flag overrides the per series and default settings - you must set\n it to <code>null</code> if you want the other settings to apply.
org.jfree.chart.axis.ValueAxis.fixedAutoRange=Sets the fixed auto range for the axis.
org.jfree.chart.plot.PolarPlot.angleLabelPaint=Sets the paint used to display the angle labels and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.CategoryPlot.rangeZeroBaselinePaint=Sets the paint for the zero baseline plotted against the range axis and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.LevelRenderer.class=A {@link CategoryItemRenderer} that draws individual data items as\n horizontal lines, spaced in the same way as bars in a bar chart.  The\n example shown here is generated by the\n <code>OverlaidBarChartDemo2.java</code> program included in the JFreeChart\n Demo Collection\:\n <br><br>\n <img src\="../../../../../images/LevelRendererSample.png"\n alt\="LevelRendererSample.png" />
org.jfree.chart.renderer.AbstractRenderer.baseLegendShape=Sets the default legend shape and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.ContourPlot.class=A class for creating shaded contours.
org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesFillPaint=Sets the flag that controls whether or not the series fill paint list is\n automatically populated when {@link \#lookupSeriesFillPaint(int)} is\n called.
org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesShape=Sets the flag that controls whether or not the series shape list is\n automatically populated when {@link \#lookupSeriesShape(int)} is called.
org.jfree.chart.block.AbstractBlock.margin=Sets the margin (use {@link RectangleInsets\#ZERO_INSETS} for no\n padding).
org.jfree.chart.renderer.category.BarRenderer.shadowPaint=Sets the shadow paint and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.CategoryPlot.rangeGridlineStroke=Sets the stroke used to draw the grid-lines against the range axis and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.PieLabelRecord.allocatedY=Sets the allocated y-coordinate.
org.jfree.chart.plot.PiePlot.autoPopulateSectionOutlinePaint=Sets the flag that controls whether or not the section outline paint is\n auto-populated by the {@link \#lookupSectionOutlinePaint(Comparable)}\n method, and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.itemLabelsVisible=Sets the visibility of the item labels for ALL series (optional).
org.jfree.chart.axis.AxisSpace.bottom=Sets the space reserved for axes at the bottom of the plot area.
org.jfree.chart.renderer.category.CategoryItemRenderer.outlinePaint=Sets the outline paint for ALL series (optional).
org.jfree.chart.renderer.xy.XYItemRendererState.class=The state for an {@link XYItemRenderer}.
org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.fillBox=Sets the flag that controls whether or not the box is filled and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYStepAreaRenderer.plotArea=Sets a flag that controls whether or not areas are drawn for each data\n item and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.PiePlot.labelLinkStroke=Sets the link stroke and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.axis.AxisSpace.right=Sets the space reserved for axes at the right of the plot area.
org.jfree.chart.plot.ThermometerPlot.valuePaint=Sets the paint used to display the current value and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.CategoryItemRenderer.baseStroke=Sets the base stroke and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.axis.CategoryAxis.categoryLabelPositionOffset=Sets the offset between the axis and the category labels (before label\n positioning is taken into account).
org.jfree.chart.axis.ValueAxis.upperMargin=Sets the upper margin for the axis (as a percentage of the axis range)\n and sends an {@link AxisChangeEvent} to all registered listeners.  This\n margin is added only when the axis range is auto-calculated - if you set\n the axis range manually, the margin is ignored.
org.jfree.chart.renderer.xy.HighLowRenderer.closeTickPaint=Sets the paint used to draw the ticks for the close values and sends a\n {@link RendererChangeEvent} to all registered listeners.  If you set\n this to <code>null</code> (the default), the series paint is used\n instead.
org.jfree.chart.plot.PiePlot.sectionPaint=Sets the paint for ALL sections in the plot.  If this is set to\n </code>null</code>, then a list of paints is used instead (to allow\n different colors to be used for each section).
org.jfree.chart.renderer.xy.StackedXYAreaRenderer.shapeStroke=Sets the stroke for rendering shapes and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.RingPlot.sectionDepth=The section depth is given as percentage of the plot radius.\n Specifying 1.0 results in a straightforward pie chart.
org.jfree.chart.plot.Marker.labelPaint=Sets the label paint and sends a {@link MarkerChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.RingPlot.innerSeparatorExtension=Sets the length of the inner extension of the separator line that is\n drawn between sections, as a percentage of the depth of the\n sections, and sends a {@link PlotChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.ThermometerPlot.thermometerStroke=Sets the stroke used to draw the thermometer outline and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.Axis.labelFont=Sets the font for the axis label and sends an {@link AxisChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.MeterPlot.class=A plot that displays a single value in the form of a needle on a dial.\n Defined ranges (for example, 'normal', 'warning' and 'critical') can be\n highlighted on the dial.
org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.class=A renderer that draws box-and-whisker items on an {@link XYPlot}.  This\n renderer requires a {@link BoxAndWhiskerXYDataset}).  The example shown here\n is generated by the <code>BoxAndWhiskerChartDemo2.java</code> program\n included in the JFreeChart demo collection\:\n <br><br>\n <img src\="../../../../../images/XYBoxAndWhiskerRendererSample.png"\n alt\="XYBoxAndWhiskerRendererSample.png" />\n <P>\n This renderer does not include any code to calculate the crosshair point.
org.jfree.chart.axis.Axis.minorTickMarkOutsideLength=Sets the outside length of the minor tick marks and sends\n an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.axis.CyclicNumberAxis.boundMappedToLastCycle=The cycle bound can be associated either with the current or with the\n last cycle.  It's up to the user's choice to decide which, as this is\n just a convention. By default, the cycle bound is mapped to the current\n cycle.\n <br>\n Note that this has no effect on visual appearance, as the cycle bound is\n mapped successively for both axis ends. Use this function for correct\n results in valueToJava2D.
org.jfree.chart.plot.Crosshair.paint=Sets the paint for the crosshair line and sends a property change event\n with the name "paint" to all registered listeners.
org.jfree.chart.plot.MeterPlot.tickLabelFont=Sets the tick label font and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.axis.ValueAxis.autoRangeMinimumSize=Sets the auto range minimum size and sends an {@link AxisChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.category.BarRenderer.base=Sets the base value for the bars and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.Crosshair.stroke=Sets the stroke for the crosshair line and sends a property change event\n with the name "stroke" to all registered listeners.
org.jfree.chart.axis.PeriodAxis.class=An axis that displays a date scale based on a\n {@link org.jfree.data.time.RegularTimePeriod}.  This axis works when\n displayed across the bottom or top of a plot, but is broken for display at\n the left or right of charts.
org.jfree.chart.plot.ThermometerPlot.thermometerPaint=Sets the paint used to draw the thermometer outline and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.CategoryAxis.class=An axis that displays categories.
org.jfree.chart.axis.SymbolAxis.gridBandsVisible=Sets the visibility of the grid bands and notifies registered\n listeners that the axis has been modified.
org.jfree.chart.renderer.xy.XYDifferenceRenderer.shapesVisible=Sets a flag that controls whether or not shapes are drawn for each\n data value, and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.xy.CandlestickRenderer.autoWidthGap=Sets the amount of space to leave on the left and right of each candle\n when automatically calculating widths and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.ValueMarker.class=A marker that represents a single value.  Markers can be added to plots to\n highlight specific values.
org.jfree.chart.renderer.category.LevelRenderer.maximumItemWidth=Sets the maximum item width, which is specified as a percentage of the\n available space for all items, and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.fillPaint=Sets the fill paint for ALL series (optional).
org.jfree.chart.axis.SubCategoryAxis.class=A specialised category axis that can display sub-categories.
org.jfree.chart.axis.CyclicNumberAxis.fixedAutoRange=The auto range is fixed for this class to the period by default.\n This function will thus set a new period.
org.jfree.chart.renderer.xy.CandlestickRenderer.drawVolume=Sets a flag that controls whether or not volume bars are drawn in the\n background and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.medianVisible=Sets the flag that controls whether or not the median indicator is drawn\n for each item, and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.FastScatterPlot.domainGridlinesVisible=Sets the flag that controls whether or not the domain grid-lines are\n visible.  If the flag value is changed, a {@link PlotChangeEvent} is\n sent to all registered listeners.
org.jfree.chart.renderer.category.BarRenderer.shadowVisible=Sets the flag that controls whether or not shadows are\n drawn by the renderer.
org.jfree.chart.plot.Plot.backgroundImage=Sets the background image for the plot and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.Axis.tickLabelsVisible=Sets the flag that determines whether or not the tick labels are\n visible and sends an {@link AxisChangeEvent} to all registered\n listeners.
org.jfree.chart.title.TextTitle.paint=Sets the paint used to display the title string.  Registered listeners\n are notified that the title has been modified.
org.jfree.chart.renderer.xy.StandardXYItemRenderer.legendLine=Sets the shape used as a line in each legend item and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.domainCrosshairLockedOnData=Sets the flag indicating whether or not the domain crosshair should\n "lock-on" to actual data values.  If the flag value changes, this\n method sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.StackedXYAreaRenderer.shapePaint=Sets the paint for rendering shapes and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.Plot.class=The base class for all plots in JFreeChart.  The {@link JFreeChart} class\n delegates the drawing of axes and data to the plot.  This base class\n provides facilities common to most plot types.
org.jfree.chart.axis.SymbolAxis.class=A standard linear value axis that replaces integer values with symbols.
org.jfree.chart.renderer.xy.XYAreaRenderer.class=Area item renderer for an {@link XYPlot}.  This class can draw (a) shapes at\n each point, or (b) lines between points, or (c) both shapes and lines,\n or (d) filled areas, or (e) filled areas and shapes. The example shown here\n is generated by the <code>XYAreaRendererDemo1.java</code> program included\n in the JFreeChart demo collection\:\n <br><br>\n <img src\="../../../../../images/XYAreaRendererSample.png"\n alt\="XYAreaRendererSample.png" />
org.jfree.chart.plot.JThermometer.foreground=Sets the foreground color.
org.jfree.chart.axis.Axis.tickMarkPaint=Sets the paint used to draw tick marks and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.title.Title.class=The base class for all chart titles.  A chart can have multiple titles,\n appearing at the top, bottom, left or right of the chart.\n <P>\n Concrete implementations of this class will render text and images, and\n hence do the actual work of drawing titles.
org.jfree.chart.plot.SpiderWebPlot.labelPaint=Sets the series label paint and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.JFreeChart.backgroundImage=Sets the background image for the chart and sends a\n {@link ChartChangeEvent} to all registered listeners.
org.jfree.chart.plot.JThermometer.value=Sets the value of the thermometer.
org.jfree.chart.renderer.xy.XYItemRenderer.itemLabelsVisible=Sets a flag that controls whether or not the item labels for ALL series\n are visible.
org.jfree.chart.plot.PiePlot.autoPopulateSectionOutlineStroke=Sets the flag that controls whether or not the section outline stroke is\n auto-populated by the {@link \#lookupSectionOutlineStroke(Comparable)}\n method, and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.CategoryItemRenderer.class=A plug-in object that is used by the {@link CategoryPlot} class to display\n individual data items from a {@link CategoryDataset}.\n <p>\n This interface defines the methods that must be provided by all renderers.\n If you are implementing a custom renderer, you should consider extending the\n {@link AbstractCategoryItemRenderer} class.\n <p>\n Most renderer attributes are defined using a "three layer" approach.  When\n looking up an attribute (for example, the outline paint) the renderer first\n checks to see if there is a setting (in layer 0) that applies to ALL items\n that the renderer draws.  If there is, that setting is used, but if it is\n <code>null</code> the renderer looks up the next layer, which contains\n "per series" settings for the attribute (many attributes are defined on a\n per series basis, so this is the layer that is most commonly used).  If the\n layer 1 setting is <code>null</code>, the renderer will look up the final\n layer, which provides a default or "base" setting.  Some attributes allow\n the base setting to be <code>null</code>, while other attributes enforce\n non-<code>null</code> values.
org.jfree.chart.axis.LogarithmicAxis.strictValuesFlag=Sets the 'strictValuesFlag' flag; if true and 'allowNegativesFlag'\n is false then this axis will throw a runtime exception if any of its\n values are less than or equal to zero; if false then the axis will\n adjust for values less than or equal to zero as needed.
org.jfree.chart.renderer.category.LineRenderer3D.YOffset=Sets the y-offset and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.Crosshair.labelBackgroundPaint=Sets the label background paint and sends a property change event with\n the name 'labelBackgroundPaint') to all registered listeners.
org.jfree.chart.title.LegendTitle.itemLabelPadding=Sets the padding used for the item labels in the legend.
org.jfree.chart.plot.ContourPlot.renderAsPoints=Sets the renderAsPoints.
org.jfree.chart.plot.ContourPlot.rangeCrosshairLockedOnData=Sets the flag indicating whether or not the range crosshair should\n "lock-on" to actual data values.
org.jfree.chart.renderer.category.StackedBarRenderer3D.renderAsPercentages=Sets the flag that controls whether the renderer displays each item\n value as a percentage (so that the stacked bars add to 100%), and sends\n a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.baseItemLabelFont=Sets the base item label font and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.artifactPaint=Sets the paint used to paint the various artifacts such as outliers,\n farout symbol, median line and the averages ellipse, and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.Crosshair.labelFont=Sets the label font and sends a property change event (with the name\n 'labelFont') to all registered listeners.
org.jfree.chart.renderer.xy.CandlestickRenderer.autoWidthMethod=Sets the method of automatically calculating the candle width and\n sends a {@link RendererChangeEvent} to all registered listeners.\n <p>\n <code>WIDTHMETHOD_AVERAGE</code>\: Divides the entire display (ignoring\n scale factor) by the number of items, and uses this as the available\n width.<br>\n <code>WIDTHMETHOD_SMALLEST</code>\: Checks the interval between each\n item, and uses the smallest as the available width.<br>\n <code>WIDTHMETHOD_INTERVALDATA</code>\: Assumes that the dataset supports\n the IntervalXYDataset interface, and uses the startXValue - endXValue as\n the available width.\n <br>
org.jfree.chart.renderer.xy.XYErrorRenderer.capLength=Sets the length of the cap at the end of the error bars, and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.labelPaint=Sets the section label paint and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.axis.ValueAxis.inverted=Sets a flag that controls the direction of values on the axis, and\n notifies registered listeners that the axis has changed.
org.jfree.chart.plot.CompassPlot.roseHighlightPaint=Sets the paint used to draw the circles, symbols and labels of the\n compass, and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.StackedAreaRenderer.renderAsPercentages=Sets the flag that controls whether the renderer displays each item\n value as a percentage (so that the stacked areas add to 100%), and sends\n a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.domainMinorGridlinePaint=Sets the paint for the minor grid lines plotted against the domain axis,\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYBarRenderer.shadowXOffset=Sets the x-offset for the bar shadow and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.StackedBarRenderer3D.class=Renders stacked bars with 3D-effect, for use with the {@link CategoryPlot}\n class.  The example shown here is generated by the\n <code>StackedBarChart3DDemo1.java</code> program included in the\n JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/StackedBarRenderer3DSample.png"\n alt\="StackedBarRenderer3DSample.png" />
org.jfree.chart.plot.Marker.outlinePaint=Sets the outline paint and sends a {@link MarkerChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.FastScatterPlot.domainGridlineStroke=Sets the stroke for the grid lines plotted against the domain axis and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.Plot.backgroundImageAlpha=Sets the alpha transparency used when drawing the background image.
org.jfree.chart.plot.PolarPlot.class=Plots data that is in (theta, radius) pairs where\n theta equal to zero is due north and increases clockwise.
org.jfree.chart.plot.XYPlot.rangeGridlineStroke=Sets the stroke for the grid lines plotted against the range axis,\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.itemLabelFont=Sets the item label font for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.  You can set\n this to <code>null</code> if you prefer to set the font on a per series\n basis.
org.jfree.chart.plot.CompassPlot.drawBorder=Sets a flag that controls whether or not a border is drawn.
org.jfree.chart.plot.PolarPlot.angleLabelsVisible=Sets the flag that controls whether or not the angle labels are visible,\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.LogAxis.tickUnit=Sets the tick unit for the axis and sends an {@link AxisChangeEvent} to\n all registered listeners.  A side effect of calling this method is that\n the "auto-select" feature for tick units is switched off (you can\n restore it using the {@link ValueAxis\#setAutoTickUnitSelection(boolean)}\n method).
org.jfree.chart.renderer.xy.StandardXYItemRenderer.State.seriesIndex=Sets the series index for the current path.
org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesOutlineStroke=Sets the flag that controls whether or not the series outline stroke list\n is automatically populated when {@link \#lookupSeriesOutlineStroke(int)}\n is called.
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.shapesVisible=Sets the 'shapes visible' for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.Crosshair.labelVisible=Sets the flag that controls whether or not a label is drawn for the\n crosshair and sends a property change event (with the name\n 'labelVisible') to all registered listeners.
org.jfree.chart.axis.CategoryAxis.maximumCategoryLabelLines=Sets the maximum number of lines to use for each category label and\n sends an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.BarRenderer.class=A {@link CategoryItemRenderer} that draws individual data items as bars.\n The example shown here is generated by the <code>BarChartDemo1.java</code>\n program included in the JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/BarRendererSample.png"\n alt\="BarRendererSample.png" />
org.jfree.chart.renderer.category.WaterfallBarRenderer.firstBarPaint=Sets the paint that will be used to draw the first bar and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.drawSeriesLineAsPath=Sets the flag that controls whether or not each series is drawn as a\n single path and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.axis.AxisSpace.left=Sets the space reserved for axes at the left of the plot area.
org.jfree.chart.axis.CategoryAxis.maximumCategoryLabelWidthRatio=Sets the maximum category label width ratio and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.axis.Axis.minorTickMarkInsideLength=Sets the inside length of the minor tick marks and sends\n an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.BarRenderer.shadowYOffset=Sets the y-offset for the bar shadow and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.WaterfallBarRenderer.positiveBarPaint=Sets the paint that will be used to draw bars having positive values.
org.jfree.chart.plot.XYPlot.rangeCrosshairStroke=Sets the stroke used to draw the crosshairs (if visible) and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.BarRenderer.barPainter=Sets the bar painter for this renderer and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.shapesFilled=Sets the 'shapes filled' for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.MultiplePiePlot.class=A plot that displays multiple pie plots using data from a\n {@link CategoryDataset}.
org.jfree.chart.renderer.xy.XYLine3DRenderer.XOffset=Sets the x-offset and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.AbstractRenderer.baseShape=Sets the base shape and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.AbstractRenderer.createEntities=Sets the flag that controls whether or not chart entities are created\n for the items in ALL series, and sends a {@link RendererChangeEvent} to\n all registered listeners.  This flag overrides the per series and\n default settings - you must set it to <code>null</code> if you want the\n other settings to apply.
org.jfree.chart.title.LegendTitle.legendItemGraphicPadding=Sets the padding that will be applied to each item graphic in the\n legend and sends a {@link TitleChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.ScatterRenderer.itemMargin=Sets the item margin, which is the gap between items within a category\n (expressed as a percentage of the overall category width), and sends\n a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.ContourPlot.dataAreaRatio=Sets the data area ratio.
org.jfree.chart.axis.DateAxis.tickUnit=Sets the tick unit for the axis.  The auto-tick-unit-selection flag is\n set to <code>false</code>, and registered listeners are notified that\n the axis has been changed.
org.jfree.chart.plot.CategoryPlot.rangeMinorGridlinePaint=Sets the paint for the minor grid lines plotted against the range axis\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.labelBackgroundPaint=Sets the section label background paint and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.Crosshair.labelOutlineVisible=Sets the flag that controls the visibility of the label outlines and\n sends a property change event (with the name "labelOutlineVisible") to\n all registered listeners.
org.jfree.chart.JFreeChart.backgroundImageAlpha=Sets the alpha-transparency for the chart's background image.\n Registered listeners are notified that the chart has been changed.
org.jfree.chart.axis.NumberAxis.tickUnit=Sets the tick unit for the axis and sends an {@link AxisChangeEvent} to\n all registered listeners.  A side effect of calling this method is that\n the "auto-select" feature for tick units is switched off (you can\n restore it using the {@link ValueAxis\#setAutoTickUnitSelection(boolean)}\n method).
org.jfree.chart.block.AbstractBlock.ID=Sets the id for the block.
org.jfree.chart.plot.ThermometerPlot.units=Sets the unit type.
org.jfree.chart.title.LegendTitle.class=A chart title that displays a legend for the data in the chart.\n <P>\n The title can be populated with legend items manually, or you can assign a\n reference to the plot, in which case the legend items will be automatically\n created to match the dataset(s).
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.class=A renderer that connects data points with lines and/or draws shapes at each\n data point.  This renderer is designed for use with the {@link XYPlot}\n class.  The example shown here is generated by\n the <code>XYLineAndShapeRendererDemo2.java</code> program included in the\n JFreeChart demo collection\:\n <br><br>\n <img src\="../../../../../images/XYLineAndShapeRendererSample.png"\n alt\="XYLineAndShapeRendererSample.png" />
org.jfree.chart.plot.MeterPlot.dialBackgroundPaint=Sets the paint used to fill the dial background.  Set this to\n <code>null</code> for no background.
org.jfree.chart.axis.Axis.tickLabelPaint=Sets the paint used to draw tick labels (if they are showing) and\n sends an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.axisOffset=Sets the axis offsets (gap between the data area and the axes) and sends\n a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYErrorRenderer.drawXError=Sets the flag that controls whether or not the renderer draws error\n bars for the x-values and, if the flag changes, sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.ContourPlot.missingPaint=Sets the missingPaint.
org.jfree.chart.axis.PeriodAxis.minorTickMarkOutsideLength=Sets the outside length of the minor tick marks and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.plot.CategoryPlot.crosshairDatasetIndex=Sets the dataset index for the crosshair and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.CategoryPlot.rangeMinorGridlineStroke=Sets the stroke for the minor grid lines plotted against the range axis,\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.MeterPlot.dialOutlinePaint=Sets the dial outline paint and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.XYPlot.rangeGridlinePaint=Sets the paint for the grid lines plotted against the range axis and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.StandardXYItemRenderer.baseShapesVisible=Sets the flag that controls whether or not a shape is plotted at each\n data point.
org.jfree.chart.renderer.xy.CandlestickRenderer.candleWidth=Sets the candle width and sends a {@link RendererChangeEvent} to all\n registered listeners.\n <P>\n If you set the width to a negative value, the renderer will calculate\n the candle width automatically based on the space available on the chart.
org.jfree.chart.plot.Crosshair.value=Sets the crosshair value and sends a property change event with the name\n 'value' to all registered listeners.
org.jfree.chart.plot.Crosshair.labelYOffset=Sets the y-offset and sends a property change event (with the name\n 'labelYOffset') to all registered listeners.
org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawSeriesLineAsPath=Sets the flag that controls whether or not each series is drawn as a\n single path.
org.jfree.chart.renderer.category.CategoryItemRenderer.itemLabelFont=Sets the item label font for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.  You can set\n this to <code>null</code> if you prefer to set the font on a per series\n basis.
org.jfree.chart.renderer.category.GanttRenderer.startPercent=Sets the position of the start of the progress indicator, as a\n percentage of the bar width, and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.plot.ThermometerPlot.useSubrangePaint=Sets the range colour change option.
org.jfree.chart.renderer.category.LineAndShapeRenderer.useOutlinePaint=Sets the flag that controls whether the outline paint is used for shape\n outlines, and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.xy.XYErrorRenderer.errorStroke=Sets the stroke used to draw the error bars and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.CategoryItemRenderer.baseItemLabelPaint=Sets the base item label paint and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.axis.ColorBar.class=A color bar.
org.jfree.chart.renderer.AbstractRenderer.outlinePaint=Sets the outline paint for ALL series (optional) and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.SpiderWebPlot.baseSeriesOutlineStroke=Sets the base series stroke.
org.jfree.chart.plot.XYPlot.domainCrosshairVisible=Sets the flag indicating whether or not the domain crosshair is visible\n and, if the flag changes, sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.XYAreaRenderer2.class=Area item renderer for an {@link XYPlot}. The example shown here is\n generated by the <code>XYAreaRenderer2Demo1.java</code> program included in\n the JFreeChart demo collection\:\n <br><br>\n <img src\="../../../../../images/XYAreaRenderer2Sample.png"\n alt\="XYAreaRenderer2Sample.png" />
org.jfree.chart.renderer.xy.HighLowRenderer.tickLength=Sets the tick length (in Java2D units) and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.ThermometerPlot.mercuryPaint=Sets the default mercury paint and sends a {@link PlotChangeEvent} to\n all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.baseLegendTextPaint=Sets the default legend text paint and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYBlockRenderer.blockAnchor=Sets the anchor point used to align a block at its (x, y) location and\n sends a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.Plot.backgroundAlpha=Sets the alpha transparency of the plot area background, and notifies\n registered listeners that the plot has been modified.
org.jfree.chart.renderer.xy.XYShapeRenderer.useOutlinePaint=Sets the flag that controls whether the outline paint is used for shape\n outlines, and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.axis.Axis.axisLineVisible=Sets a flag that controls whether or not the axis line is visible and\n sends an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYDifferenceRenderer.negativePaint=Sets the paint used to highlight negative differences.
org.jfree.chart.renderer.AbstractRenderer.baseSeriesVisible=Sets the base visibility and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.CombinedDomainXYPlot.class=An extension of {@link XYPlot} that contains multiple subplots that share a\n common domain axis.
org.jfree.chart.plot.MeterPlot.tickLabelsVisible=Sets the flag that controls whether or not the tick labels are visible\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.maximumBarWidth=Sets the maximum bar width, which is specified as a percentage of the\n available space for all bars, and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.category.LineAndShapeRenderer.shapesFilled=Sets the 'shapes filled' for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.class=A plot that displays data in the form of a pie chart, using data from any\n class that implements the {@link PieDataset} interface.\n The example shown here is generated by the <code>PieChartDemo2.java</code>\n program included in the JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../images/PiePlotSample.png"\n alt\="PiePlotSample.png" />\n <P>\n Special notes\:\n <ol>\n <li>the default starting point is 12 o'clock and the pie sections proceed\n in a clockwise direction, but these settings can be changed;</li>\n <li>negative values in the dataset are ignored;</li>\n <li>there are utility methods for creating a {@link PieDataset} from a\n {@link org.jfree.data.category.CategoryDataset};</li>\n </ol>
org.jfree.chart.renderer.xy.XYItemRenderer.seriesVisibleInLegend=Sets the flag that controls the visibility of ALL series in the legend\n and sends a {@link RendererChangeEvent} to all registered listeners.\n This flag overrides the per series and default settings - you must set\n it to <code>null</code> if you want the other settings to apply.
org.jfree.chart.renderer.xy.XYItemRenderer.paint=Sets the paint to be used for ALL series, and sends a\n {@link RendererChangeEvent} to all registered listeners.  If this is\n <code>null</code>, the renderer will use the paint for the series.
org.jfree.chart.renderer.xy.XYStepAreaRenderer.shapesFilled=Sets the 'shapes filled' for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.labelOutlineStroke=Sets the section label outline stroke and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.defaultEntityRadius=Sets the radius of the circle used for the default entity area\n when no area is specified.
org.jfree.chart.renderer.category.LineAndShapeRenderer.class=A renderer that draws shapes for each data item, and lines between data\n items (for use with the {@link CategoryPlot} class).\n The example shown here is generated by the <code>LineChartDemo1.java</code>\n program included in the JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/LineAndShapeRendererSample.png"\n alt\="LineAndShapeRendererSample.png" />
org.jfree.chart.plot.MultiplePiePlot.legendItemShape=Sets the shape used for legend items and sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.xy.XYErrorRenderer.errorPaint=Sets the paint used to draw the error bars and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.seriesVisible=Sets the flag that controls the visibility of ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.  This flag\n overrides the per series and default settings - you must set it to\n <code>null</code> if you want the other settings to apply.
org.jfree.chart.plot.PiePlot3D.class=A plot that displays data in the form of a 3D pie chart, using data from\n any class that implements the {@link PieDataset} interface.\n <P>\n Although this class extends {@link PiePlot}, it does not currently support\n exploded sections.
org.jfree.chart.axis.Axis.tickMarkOutsideLength=Sets the outside length of the tick marks and sends\n an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYBarRenderer.barAlignmentFactor=Sets the bar alignment factor and sends a {@link RendererChangeEvent}\n to all registered listeners.  If the alignment factor is outside the\n range 0.0 to 1.0, no alignment will be performed by the renderer.
org.jfree.chart.plot.PiePlot.ignoreZeroValues=Sets a flag that controls whether zero values are ignored,\n and sends a {@link PlotChangeEvent} to all registered listeners.  This\n only affects whether or not a label appears for the non-visible\n pie section.
org.jfree.chart.title.LegendTitle.backgroundPaint=Sets the background paint for the legend and sends a\n {@link TitleChangeEvent} to all registered listeners.
org.jfree.chart.plot.SpiderWebPlot.class=A plot that displays data from a {@link CategoryDataset} in the form of a\n "spider web".  Multiple series can be plotted on the same axis to allow\n easy comparison.  This plot doesn't support negative values at present.
org.jfree.chart.renderer.xy.XYItemRenderer.baseSeriesVisibleInLegend=Sets the base visibility in the legend and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.LineRenderer3D.XOffset=Sets the x-offset and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.XYLine3DRenderer.class=A XYLineAndShapeRenderer that adds a shadow line to the graph\n to emulate a 3D-effect.
org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.artifactPaint=Sets the paint used to color the median and average markers and sends\n a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.BarRenderer.includeBaseInRange=Sets the flag that controls whether or not the base value for the bars\n is included in the range calculated by\n {@link \#findRangeBounds(CategoryDataset)}.  If the flag is changed,\n a {@link RendererChangeEvent} is sent to all registered listeners.
org.jfree.chart.axis.CategoryAxis.categoryMargin=Sets the category margin and sends an {@link AxisChangeEvent} to all\n registered listeners.  The overall category margin is distributed over\n N-1 gaps, where N is the number of categories on the axis.
org.jfree.chart.axis.SegmentedTimeline.class=A {@link Timeline} that implements a "segmented" timeline with included,\n excluded and exception segments.\n <P>\n A Timeline will present a series of values to be used for an axis. Each\n Timeline must provide transformation methods between domain values and\n timeline values.\n <P>\n A timeline can be used as parameter to a\n {@link org.jfree.chart.axis.DateAxis} to define the values that this axis\n supports. This class implements a timeline formed by segments of equal\n length (ex. days, hours, minutes) where some segments can be included in the\n timeline and others excluded. Therefore timelines like "working days" or\n "working hours" can be created where non-working days or non-working hours\n respectively can be removed from the timeline, and therefore from the axis.\n This creates a smooth plot with equal separation between all included\n segments.\n <P>\n Because Timelines were created mainly for Date related axis, values are\n represented as longs instead of doubles. In this case, the domain value is\n just the number of milliseconds since January 1, 1970, 00\:00\:00 GMT as\n defined by the getTime() method of {@link java.util.Date}.\n <P>\n In this class, a segment is defined as a unit of time of fixed length.\n Examples of segments are\: days, hours, minutes, etc. The size of a segment\n is defined as the number of milliseconds in the segment. Some useful segment\n sizes are defined as constants in this class\: DAY_SEGMENT_SIZE,\n HOUR_SEGMENT_SIZE, FIFTEEN_MINUTE_SEGMENT_SIZE and MINUTE_SEGMENT_SIZE.\n <P>\n Segments are group together to form a Segment Group. Each Segment Group will\n contain a number of Segments included and a number of Segments excluded. This\n Segment Group structure will repeat for the whole timeline.\n <P>\n For example, a working days SegmentedTimeline would be formed by a group of\n 7 daily segments, where there are 5 included (Monday through Friday) and 2\n excluded (Saturday and Sunday) segments.\n <P>\n Following is a diagram that explains the major attributes that define a\n segment.  Each box is one segment and must be of fixed length (ms, second,\n hour, day, etc).\n <p>\n <pre>\n start time\n   |\n   v\n   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 ...\n +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+...\n |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|\n +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+...\n  \\____________/ \\___/            \\_/\n        \\/         |               |\n     included   excluded        segment\n     segments   segments         size\n  \\_________  _______/\n            \\/\n       segment group\n </pre>\n Legend\:<br>\n &lt;space&gt; \= Included segment<br>\n EE      \= Excluded segments in the base timeline<br>\n <p>\n In the example, the following segment attributes are presented\:\n <ul>\n <li>segment size\: the size of each segment in ms.\n <li>start time\: the start of the first segment of the first segment group to\n     consider.\n <li>included segments\: the number of segments to include in the group.\n <li>excluded segments\: the number of segments to exclude in the group.\n </ul>\n <p>\n Exception Segments are allowed. These exception segments are defined as\n segments that would have been in the included segments of the Segment Group,\n but should be excluded for special reasons. In the previous working days\n SegmentedTimeline example, holidays would be considered exceptions.\n <P>\n Additionally the <code>startTime</code>, or start of the first Segment of\n the smallest segment group needs to be defined. This startTime could be\n relative to January 1, 1970, 00\:00\:00 GMT or any other date. This creates a\n point of reference to start counting Segment Groups. For example, for the\n working days SegmentedTimeline, the <code>startTime</code> could be\n 00\:00\:00 GMT of the first Monday after January 1, 1970. In this class, the\n constant FIRST_MONDAY_AFTER_1900 refers to a reference point of the first\n Monday of the last century.\n <p>\n A SegmentedTimeline can include a baseTimeline. This combination of\n timelines allows the creation of more complex timelines. For example, in\n order to implement a SegmentedTimeline for an intraday stock trading\n application, where the trading period is defined as 9\:00 AM through 4\:00 PM\n Monday through Friday, two SegmentedTimelines are used. The first one (the\n baseTimeline) would be a working day SegmentedTimeline (daily timeline\n Monday through Friday). On top of this baseTimeline, a second one is defined\n that maps the 9\:00 AM to 4\:00 PM period. Because the baseTimeline defines a\n timeline of Monday through Friday, the resulting (combined) timeline will\n expose the period 9\:00 AM through 4\:00 PM only on Monday through Friday,\n and will remove all other intermediate intervals.\n <P>\n Two factory methods newMondayThroughFridayTimeline() and\n newFifteenMinuteTimeline() are provided as examples to create special\n SegmentedTimelines.
org.jfree.chart.plot.MeterPlot.tickLabelFormat=Sets the format for the tick labels and sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.axis.NumberAxis.autoRangeIncludesZero=Sets the flag that indicates whether or not the axis range, if\n automatically calculated, is forced to include zero.\n <p>\n If the flag is changed to <code>true</code>, the axis range is\n recalculated.\n <p>\n Any change to the flag will trigger an {@link AxisChangeEvent}.
org.jfree.chart.plot.RingPlot.outerSeparatorExtension=Sets the length of the outer extension of the separator line that is\n drawn between sections, as a percentage of the depth of the\n sections, and sends a {@link PlotChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.category.BarRenderer.maximumBarWidth=Sets the maximum bar width, which is specified as a percentage of the\n available space for all bars, and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.renderer.xy.SamplingXYLineRenderer.legendLine=Sets the shape used as a line in each legend item and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.axis.CategoryAxis.upperMargin=Sets the upper margin for the axis and sends an {@link AxisChangeEvent}\n to all registered listeners.
org.jfree.chart.axis.Axis.minorTickMarksVisible=Sets the flag that indicates whether or not the minor tick marks are showing\n and sends an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.title.Title.notify=Sets the flag that indicates whether or not the notification mechanism\n is enabled.  There are certain situations (such as cloning) where you\n want to turn notification off temporarily.
org.jfree.chart.renderer.xy.XYErrorRenderer.drawYError=Sets the flag that controls whether or not the renderer draws error\n bars for the y-values and, if the flag changes, sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYDotRenderer.legendShape=Sets the shape used as a line in each legend item and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.LineRenderer3D.wallPaint=Sets the paint used to hightlight the left and bottom walls in the plot\n background, and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.axis.CyclicNumberAxis.class=This class extends NumberAxis and handles cycling.\n\nTraditional representation of data in the range x0..x1\n<pre>\n|-------------------------|\nx0                       x1\n</pre>\n\nHere, the range bounds are at the axis extremities.\nWith cyclic axis, however, the time is split in\n"cycles", or "time frames", or the same duration \: the period.\n\nA cycle axis cannot by definition handle a larger interval\nthan the period \: <pre>x1 - x0 >\= period</pre>. Thus, at most a full\nperiod can be represented with such an axis.\n\nThe cycle bound is the number between x0 and x1 which marks\nthe beginning of new time frame\:\n<pre>\n|---------------------|----------------------------|\nx0                   cb                           x1\n<---previous cycle---><-------current cycle-------->\n</pre>\n\nIt is actually a multiple of the period, plus optionally\na start offset\: <pre>cb \= n * period + offset</pre>\n\nThus, by definition, two consecutive cycle bounds\nperiod apart, which is precisely why it is called a\nperiod.\n\nThe visual representation of a cyclic axis is like that\:\n<pre>\n|----------------------------|---------------------|\ncb                         x1|x0                  cb\n<-------current cycle--------><---previous cycle--->\n</pre>\n\nThe cycle bound is at the axis ends, then current\ncycle is shown, then the last cycle. When using\ndynamic data, the visual effect is the current cycle\nerases the last cycle as x grows. Then, the next cycle\nbound is reached, and the process starts over, erasing\nthe previous cycle.\n\nA Cyclic item renderer is provided to do exactly this.
org.jfree.chart.axis.LogAxis.class=A numerical axis that uses a logarithmic scale.  The class is an\n alternative to the {@link LogarithmicAxis} class.
org.jfree.chart.plot.CategoryPlot.rangeCrosshairVisible=Sets the flag indicating whether or not the range crosshair is visible.
org.jfree.chart.plot.Marker.stroke=Sets the stroke and sends a {@link MarkerChangeEvent} to all registered\n listeners.
org.jfree.chart.JFreeChart.borderVisible=Sets a flag that controls whether or not a border is drawn around the\n outside of the chart.
org.jfree.chart.renderer.AbstractRenderer.baseStroke=Sets the base stroke and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.CategoryPlot.rangePannable=Sets the flag that enables or disables panning of the plot along\n the range axes.
org.jfree.chart.renderer.category.CategoryItemRenderer.stroke=Sets the stroke for ALL series and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.MultiplePiePlot.limit=Sets the limit below which pie sections are aggregated.\n Set this to 0.0 if you don't want any aggregation to occur.
org.jfree.chart.plot.PiePlot3D.depthFactor=Sets the pie depth as a percentage of the height of the plot area, and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.LogarithmicAxis.allowNegativesFlag=Sets the 'allowNegativesFlag' flag; true to allow negative values\n in data, false to be able to plot positive values arbitrarily close to\n zero.
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.baseShapesVisible=Sets the base 'shapes visible' flag and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.SpiderWebPlot.webFilled=Sets the webFilled flag and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.Crosshair.labelAnchor=Sets the label anchor point and sends a property change event (with the\n name 'labelAnchor') to all registered listeners.
org.jfree.chart.plot.ContourPlot.rangeCrosshairVisible=Sets the flag indicating whether or not the range crosshair is visible.
org.jfree.chart.plot.XYPlot.rangeAxisLocation=Sets the location of the primary range axis and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.CategoryPlot.domainCrosshairPaint=Sets the paint used to draw the domain crosshair.
org.jfree.chart.title.LegendTitle.legendItemGraphicAnchor=Sets the anchor point used for the graphic in each legend item.
org.jfree.chart.renderer.xy.StackedXYAreaRenderer.class=A stacked area renderer for the {@link XYPlot} class.\n <br><br>\n The example shown here is generated by the\n <code>StackedXYAreaRendererDemo1.java</code> program included in the\n JFreeChart demo collection\:\n <br><br>\n <img src\="../../../../../images/StackedXYAreaRendererSample.png"\n alt\="StackedXYAreaRendererSample.png" />\n <br><br>\n SPECIAL NOTE\:  This renderer does not currently handle negative data values\n correctly.  This should get fixed at some point, but the current workaround\n is to use the {@link StackedXYAreaRenderer2} class instead.
org.jfree.chart.plot.PiePlotState.latestAngle=Sets the latest angle.
org.jfree.chart.plot.CategoryPlot.rangeMinorGridlinesVisible=Sets the flag that controls whether or not the range axis minor grid\n lines are visible.\n <p>\n If the flag value is changed, a {@link PlotChangeEvent} is sent to all\n registered listeners.
org.jfree.chart.renderer.category.GanttRenderer.completePaint=Sets the paint used to show the percentage complete and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.baseOutlinePaint=Sets the base outline paint and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.plot.CompassPlot.rosePaint=Sets the paint used to fill the outer circle of the compass,\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.class=A box-and-whisker renderer.  This renderer requires a\n {@link BoxAndWhiskerCategoryDataset} and is for use with the\n {@link CategoryPlot} class.  The example shown here is generated\n by the <code>BoxAndWhiskerChartDemo1.java</code> program included in the\n JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/BoxAndWhiskerRendererSample.png"\n alt\="BoxAndWhiskerRendererSample.png" />
org.jfree.chart.JFreeChart.title=Sets the chart title and sends a {@link ChartChangeEvent} to all\n registered listeners.  This is a convenience method that ends up calling\n the {@link \#setTitle(TextTitle)} method.  If there is an existing title,\n its text is updated, otherwise a new title using the default font is\n added to the chart.  If <code>text</code> is <code>null</code> the chart\n title is set to <code>null</code>.
org.jfree.chart.plot.ContourPlot.domainCrosshairVisible=Sets the flag indicating whether or not the domain crosshair is visible.
org.jfree.chart.axis.PeriodAxis.minorTickMarkPaint=Sets the paint used to display minor tick marks, if they are\n visible, and sends a {@link AxisChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.itemMargin=Sets the item margin and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.MeterPlot.tickLabelPaint=Sets the tick label paint and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.title.TextTitle.textAlignment=Sets the text alignment and sends a {@link TitleChangeEvent} to\n all registered listeners.
org.jfree.chart.renderer.xy.DeviationRenderer.class=A specialised subclass of the {@link XYLineAndShapeRenderer} that requires\n an {@link IntervalXYDataset} and represents the y-interval by shading an\n area behind the y-values on the chart.\n The example shown here is generated by the\n <code>DeviationRendererDemo1.java</code> program included in the\n JFreeChart demo collection\:\n <br><br>\n <img src\="../../../../../images/DeviationRendererSample.png"\n alt\="DeviationRendererSample.png" />
org.jfree.chart.renderer.AbstractRenderer.baseItemLabelPaint=Sets the base item label paint and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.xy.HighLowRenderer.openTickPaint=Sets the paint used to draw the ticks for the open values and sends a\n {@link RendererChangeEvent} to all registered listeners.  If you set\n this to <code>null</code> (the default), the series paint is used\n instead.
org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.meanVisible=Sets the flag that controls whether or not the mean indicator is drawn\n for each item, and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.AbstractRenderer.baseOutlineStroke=Sets the base outline stroke and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.plot.ThermometerPlot.lowerBound=Sets the lower bound for the thermometer.
org.jfree.chart.renderer.category.CategoryItemRenderer.seriesVisible=Sets the flag that controls the visibility of ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.  This flag\n overrides the per series and default settings - you must set it to\n <code>null</code> if you want the other settings to apply.
org.jfree.chart.plot.SpiderWebPlot.axisLabelGap=Sets the axis label gap and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.PiePlotState.total=Sets the total.
org.jfree.chart.plot.CombinedDomainCategoryPlot.orientation=Sets the orientation of the plot (and all subplots).
org.jfree.chart.plot.Plot.backgroundPaint=Sets the background color of the plot area and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.ColorPalette.class=Defines palette used by {@link ContourPlot}.
org.jfree.chart.plot.ContourPlot.domainCrosshairPaint=Sets the Paint used to color the crosshairs (if visible) and notifies\n registered listeners that the axis has been modified.
org.jfree.chart.renderer.category.CategoryItemRenderer.paint=Sets the paint to be used for ALL series, and sends a\n {@link RendererChangeEvent} to all registered listeners.  If this is\n <code>null</code>, the renderer will use the paint for the series.
org.jfree.chart.renderer.xy.XYItemRenderer.baseItemLabelFont=Sets the base item label font and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.JThermometer.units=Sets the unit type.
org.jfree.chart.axis.Axis.tickMarkStroke=Sets the stroke used to draw tick marks and sends\n an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.baseSeriesVisibleInLegend=Sets the base visibility in the legend and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYShapeRenderer.guideLinesVisible=Sets the flag that controls whether or not guide lines are drawn for\n each data item and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.axis.Axis.fixedDimension=Sets the fixed dimension for the axis.\n <P>\n This is used when combining more than one plot on a chart.  In this case,\n there may be several axes that need to have the same height or width so\n that they are aligned.  This method is used to fix a dimension for the\n axis (the context determines whether the dimension is horizontal or\n vertical).
org.jfree.chart.renderer.AbstractRenderer.outlineStroke=Sets the outline stroke for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.labelLinkPaint=Sets the paint used for the lines that connect pie sections to their\n corresponding labels, and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.JThermometer.followDataInSubranges=Sets the flag that controls whether or not the display range follows the\n data value.
org.jfree.chart.renderer.xy.StandardXYItemRenderer.gapThreshold=Sets the gap threshold for discontinuous lines and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.JFreeChart.backgroundPaint=Sets the paint used to fill the chart background and sends a\n {@link ChartChangeEvent} to all registered listeners.
org.jfree.chart.plot.CategoryPlot.drawSharedDomainAxis=Sets the flag that controls whether the shared domain axis is drawn when\n this plot is being used as a subplot.
org.jfree.chart.plot.CombinedDomainXYPlot.orientation=Sets the orientation for the plot (also changes the orientation for all\n the subplots to match).
org.jfree.chart.plot.PiePlotState.pieHRadius=Sets the vertical pie radius.
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.State.lastPointGood=Sets a flag that indicates if the last point drawn (in the current\n series) was 'good' (non-null).
org.jfree.chart.renderer.xy.XYStepAreaRenderer.rangeBase=Sets the value on the range axis which defines the default border of the\n area, and sends a {@link RendererChangeEvent} to all registered\n listeners.  E.g. setRangeBase(Double.NEGATIVE_INFINITY) lets areas always\n reach the lower border of the plotArea.
org.jfree.chart.renderer.xy.StandardXYItemRenderer.baseShapesFilled=Sets the base 'shapes filled' flag and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.CategoryMarker.drawAsLine=Sets the flag that controls whether the marker is drawn as a region or\n as a line, and sends a {@link MarkerChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.CategoryMarker.class=A marker for a category.\n <br><br>\n Note that for serialization to work correctly, the category key must be an\n instance of a serializable class.
org.jfree.chart.plot.ColorPalette.paletteName=Sets the palette name.
org.jfree.chart.title.TextTitle.text=Sets the title to the specified text and sends a\n {@link TitleChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.baseShapesFilled=Sets the base 'shapes filled' flag and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.ContourPlot.ptSizePct=Sets the ptSizePct.
org.jfree.chart.renderer.xy.CandlestickRenderer.upPaint=Sets the paint used to fill candles when the price moves up from open\n to close and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.Marker.labelTextAnchor=Sets the label text anchor and sends a {@link MarkerChangeEvent} to\n all registered listeners.
org.jfree.chart.axis.ValueAxis.verticalTickLabels=Sets the flag that controls whether the tick labels are displayed\n vertically (that is, rotated 90 degrees from horizontal).  If the flag\n is changed, an {@link AxisChangeEvent} is sent to all registered\n listeners.
org.jfree.chart.renderer.category.ScatterRenderer.class=A renderer that handles the multiple values from a\n {@link MultiValueCategoryDataset} by plotting a shape for each value for\n each given item in the dataset. The example shown here is generated by\n the <code>ScatterRendererDemo1.java</code> program included in the\n JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/ScatterRendererSample.png"\n alt\="ScatterRendererSample.png" />
org.jfree.chart.plot.ColorPalette.logscale=Sets the 'log-scale' flag.
org.jfree.chart.plot.XYPlot.rangeZeroBaselineVisible=Sets the flag that controls whether or not the zero baseline is\n displayed for the range axis, and sends a {@link PlotChangeEvent} to\n all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.class=Base class providing common services for renderers.  Most methods that update\n attributes of the renderer will fire a {@link RendererChangeEvent}, which\n normally means the plot that owns the renderer will receive notification that\n the renderer has been changed (the plot will, in turn, notify the chart).
org.jfree.chart.plot.PiePlot.autoPopulateSectionPaint=Sets the flag that controls whether or not the section paint is\n auto-populated by the {@link \#lookupSectionPaint(Comparable)} method,\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.pieIndex=Sets the pie index (this is used by the {@link MultiplePiePlot} class to\n track subplots).
org.jfree.chart.plot.CategoryPlot.rangeGridlinesVisible=Sets the flag that controls whether or not grid-lines are drawn against\n the range axis.  If the flag changes value, a {@link PlotChangeEvent} is\n sent to all registered listeners.
org.jfree.chart.plot.CrosshairState.anchorY=Sets the y-coordinate (in data space) for the anchor point.  Note that\n this does NOT update the anchor itself - the caller is responsible for\n ensuring this is done in sync.
org.jfree.chart.plot.CrosshairState.anchorX=Sets the x-coordinate (in data space) for the anchor point.  Note that\n this does NOT update the anchor itself - the caller is responsible for\n ensuring this is done in sync.
org.jfree.chart.block.AbstractBlock.width=Sets the natural width of the block, if this is known in advance.
org.jfree.chart.renderer.xy.XYDotRenderer.dotHeight=Sets the dot height and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.groupPaint=Sets the paint used to draw the line between the minimum and maximum\n value items in each category and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.axis.ValueAxis.downArrow=Sets the shape that can be displayed as an arrow pointing downwards at\n the end of an axis line and sends an {@link AxisChangeEvent} to all\n registered listeners.
org.jfree.chart.title.LegendTitle.legendItemGraphicLocation=Sets the legend item graphic location.
org.jfree.chart.plot.PiePlot.labelOutlinePaint=Sets the section label outline paint and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.domainGridlineStroke=Sets the stroke for the grid lines plotted against the domain axis, and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.Axis.tickMarksVisible=Sets the flag that indicates whether or not the tick marks are showing\n and sends an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.StackedBarRenderer.renderAsPercentages=Sets the flag that controls whether the renderer displays each item\n value as a percentage (so that the stacked bars add to 100%), and sends\n a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.MeterPlot.valueFont=Sets the font used to display the value label and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.RingPlot.separatorsVisible=Sets the flag that controls whether or not separators are drawn between\n the sections in the chart, and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.axis.ValueAxis.class=The base class for axes that display value data, where values are measured\n using the <code>double</code> primitive.  The two key subclasses are\n {@link DateAxis} and {@link NumberAxis}.
org.jfree.chart.plot.ContourPlot.rangeCrosshairPaint=Sets the Paint used to color the crosshairs (if visible) and notifies\n registered listeners that the axis has been modified.
org.jfree.chart.plot.PiePlot.shadowPaint=Sets the shadow paint and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.StandardXYItemRenderer.shapesFilled=Sets the override flag that controls whether or not shapes are filled\n for ALL series and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.AbstractRenderer.baseItemLabelsVisible=Sets the base setting for item label visibility and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYItemRenderer.itemLabelFont=Sets the item label font for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.  You can set\n this to <code>null</code> if you prefer to set the font on a per series\n basis.
org.jfree.chart.renderer.xy.XYErrorRenderer.class=A line and shape renderer that can also display x and/or y-error values.\n This renderer expects an {@link IntervalXYDataset}, otherwise it reverts\n to the behaviour of the super class.  The example shown here is generated by\n the <code>XYErrorRendererDemo1.java</code> program included in the\n JFreeChart demo collection\:\n <br><br>\n <img src\="../../../../../images/XYErrorRendererSample.png"\n alt\="XYErrorRendererSample.png" />
org.jfree.chart.plot.Crosshair.labelOutlineStroke=Sets the label outline stroke and sends a property change event (with\n the name 'labelOutlineStroke') to all registered listeners.
org.jfree.chart.plot.CrosshairState.class=Maintains state information about crosshairs on a plot between successive\n calls to the renderer's draw method.  This class is used internally by\n JFreeChart - it is not intended for external use.
org.jfree.chart.plot.JThermometer.showAxisLocation=Sets the location for the axis.
org.jfree.chart.plot.FastScatterPlot.domainGridlinePaint=Sets the paint for the grid lines plotted against the domain axis and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.domainCrosshairStroke=Sets the Stroke used to draw the crosshairs (if visible) and notifies\n registered listeners that the axis has been modified.
org.jfree.chart.plot.IntervalMarker.endValue=Sets the end value for the marker and sends a\n {@link MarkerChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.LineAndShapeRenderer.baseShapesFilled=Sets the base 'shapes filled' flag and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYDotRenderer.class=A renderer that draws a small dot at each data point for an {@link XYPlot}.\n The example shown here is generated by the\n <code>ScatterPlotDemo4.java</code> program included in the JFreeChart\n demo collection\:\n <br><br>\n <img src\="../../../../../images/XYDotRendererSample.png"\n alt\="XYDotRendererSample.png" />
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.errorIndicatorStroke=Sets the stroke used for the error indicators (if <code>null</code>,\n the item outline stroke is used instead) and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.CategoryItemRenderer.outlineStroke=Sets the outline stroke for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.title.LegendTitle.itemFont=Sets the item font and sends a {@link TitleChangeEvent} to\n all registered listeners.
org.jfree.chart.renderer.category.BarRenderer3D.class=A renderer for bars with a 3D effect, for use with the\n {@link CategoryPlot} class.  The example shown here is generated\n by the <code>BarChart3DDemo1.java</code> program included in the JFreeChart\n Demo Collection\:\n <br><br>\n <img src\="../../../../../images/BarRenderer3DSample.png"\n alt\="BarRenderer3DSample.png" />
org.jfree.chart.plot.XYPlot.rangeMinorGridlinePaint=Sets the paint for the minor grid lines plotted against the range axis\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.NumberAxis.autoRangeStickyZero=Sets a flag that affects the auto-range when zero falls outside the data\n range but inside the margins defined for the axis.
org.jfree.chart.renderer.xy.XYStepAreaRenderer.outline=Sets a flag that controls whether or not outlines of the areas are\n drawn, and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.FastScatterPlot.rangeGridlinesVisible=Sets the flag that controls whether or not the range axis grid lines are\n visible.  If the flag value is changed, a {@link PlotChangeEvent} is\n sent to all registered listeners.
org.jfree.chart.plot.FastScatterPlot.class=A fast scatter plot.
org.jfree.chart.axis.AxisState.cursor=Sets the cursor position.
org.jfree.chart.renderer.xy.XYItemRenderer.shape=Sets the shape for ALL series (optional) and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.SpiderWebPlot.labelFont=Sets the series label font and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.Plot.outlineVisible=Sets the flag that controls whether or not the plot's outline is\n drawn, and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.CompassPlot.seriesNeedle=Sets the needle type.
org.jfree.chart.plot.ThermometerPlot.valueFormat=Sets the formatter for the value label and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.LogarithmicAxis.log10TickLabelsFlag=Sets the 'log10TickLabelsFlag' flag.  The default value is false.
org.jfree.chart.plot.PiePlot.simpleLabels=Sets the flag that controls whether simple or extended labels are\n displayed on the plot, and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.category.BarRenderer.shadowXOffset=Sets the x-offset for the bar shadow and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.ValueMarker.value=Sets the value for the marker and sends a {@link MarkerChangeEvent} to\n all registered listeners.
org.jfree.chart.renderer.xy.DeviationRenderer.alpha=Sets the alpha transparency for the background shading, and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.StandardXYItemRenderer.State.lastPointGood=Sets a flag that indicates if the last point drawn (in the current\n series) was 'good' (non-null).
org.jfree.chart.axis.Axis.axisLinePaint=Sets the paint used to draw the axis line and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.WaterfallBarRenderer.class=A renderer that handles the drawing of waterfall bar charts, for use with\n the {@link CategoryPlot} class.  Some quirks to note\:\n <ul>\n <li>the value in the last category of the dataset should be (redundantly)\n   specified as the sum of the items in the preceding categories - otherwise\n   the final bar in the plot will be incorrectly plotted;</li>\n <li>the bar colors are defined using special methods in this class - the\n   inherited methods (for example,\n   {@link AbstractRenderer\#setSeriesPaint(int, Paint)}) are ignored;</li>\n </ul>\n The example shown here is generated by the\n <code>WaterfallChartDemo1.java</code> program included in the JFreeChart\n Demo Collection\:\n <br><br>\n <img src\="../../../../../images/WaterfallBarRendererSample.png"\n alt\="WaterfallBarRendererSample.png" />
org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesOutlinePaint=Sets the flag that controls whether or not the series outline paint list\n is automatically populated when {@link \#lookupSeriesOutlinePaint(int)}\n is called.
org.jfree.chart.plot.FastScatterPlot.domainPannable=Sets the flag that enables or disables panning of the plot along the\n domain axes.
org.jfree.chart.plot.CombinedRangeXYPlot.gap=Sets the amount of space between subplots.
org.jfree.chart.renderer.xy.XYItemRenderer.baseSeriesVisible=Sets the base visibility and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.axis.DateAxis.maximumDate=Sets the maximum date visible on the axis and sends an\n {@link AxisChangeEvent} to all registered listeners.  If\n <code>maximumDate</code> is on or before the current minimum date for\n the axis, the minimum date will be shifted to preserve the current\n length of the axis.
org.jfree.chart.plot.ThermometerPlot.followDataInSubranges=Sets the flag that controls whether or not the thermometer axis zooms\n to display the subrange within which the data value falls.
org.jfree.chart.renderer.category.StackedAreaRenderer.class=A renderer that draws stacked area charts for a {@link CategoryPlot}.\n The example shown here is generated by the\n <code>StackedAreaChartDemo1.java</code> program included in the\n JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/StackedAreaRendererSample.png"\n alt\="StackedAreaRendererSample.png" />
org.jfree.chart.plot.CategoryPlot.orientation=Sets the orientation for the plot and sends a {@link PlotChangeEvent} to\n all registered listeners.
org.jfree.chart.plot.XYPlot.domainGridlinesVisible=Sets the flag that controls whether or not the domain grid-lines are\n visible.\n <p>\n If the flag value is changed, a {@link PlotChangeEvent} is sent to all\n registered listeners.
org.jfree.chart.plot.CompassPlot.labelType=Sets the label type (either {@link \#NO_LABELS} or {@link \#VALUE_LABELS}.
org.jfree.chart.plot.CompassPlot.labelFont=Sets the label font and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.ContourPlot.domainCrosshairValue=Sets the domain crosshair value.\n <P>\n Registered listeners are notified that the plot has been modified, but\n only if the crosshair is visible.
org.jfree.chart.renderer.category.CategoryItemRenderer.seriesVisibleInLegend=Sets the flag that controls the visibility of ALL series in the legend\n and sends a {@link RendererChangeEvent} to all registered listeners.\n This flag overrides the per series and default settings - you must set\n it to <code>null</code> if you want the other settings to apply.
org.jfree.chart.plot.SpiderWebPlot.startAngle=Sets the starting angle and sends a {@link PlotChangeEvent} to all\n registered listeners.\n <P>\n The initial default value is 90 degrees, which corresponds to 12 o'clock.\n A value of zero corresponds to 3 o'clock... this is the encoding used by\n Java's Arc2D class.
org.jfree.chart.plot.ContourPlot.domainCrosshairLockedOnData=Sets the flag indicating whether or not the domain crosshair should\n "lock-on" to actual data values.
org.jfree.chart.plot.MeterPlot.valuePaint=Sets the paint used to display the value label and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.JFreeChart.borderStroke=Sets the stroke used to draw the chart border (if visible).
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.errorIndicatorPaint=Sets the paint used for the error indicators (if <code>null</code>,\n the item paint is used instead) and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.baseLegendTextFont=Sets the default legend text font and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.labelShadowPaint=Sets the section label shadow paint and sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.axis.ValueAxis.autoTickUnitSelection=Sets a flag indicating whether or not the tick unit is automatically\n selected from a range of standard tick units.  If the flag is changed,\n registered listeners are notified that the chart has changed.
org.jfree.chart.plot.CategoryPlot.axisOffset=Sets the axis offsets (gap between the data area and the axes) and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.Plot.outlinePaint=Sets the paint used to draw the outline of the plot area and sends a\n {@link PlotChangeEvent} to all registered listeners.  If you set this\n attribute to <code>null</code>, no outline will be drawn.
org.jfree.chart.renderer.xy.XYAreaRenderer.legendArea=Sets the shape used as an area in each legend item and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.StandardXYItemRenderer.plotImages=Sets the flag that controls whether or not an image is drawn at each\n data point and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.SpiderWebPlot.seriesOutlinePaint=Sets the outline paint for ALL series in the plot. If this is set to\n </code> null</code>, then a list of paints is used instead (to allow\n different colors to be used for each series).
org.jfree.chart.plot.FastScatterPlot.rangeGridlinePaint=Sets the paint for the grid lines plotted against the range axis and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.CandlestickRenderer.autoWidthFactor=Sets the factor by which the available space automatically calculated\n for the candles will be multiplied to determine the actual width to use.
org.jfree.chart.renderer.xy.XYItemRenderer.stroke=Sets the stroke for ALL series and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.PiePlot.startAngle=Sets the starting angle and sends a {@link PlotChangeEvent} to all\n registered listeners.  The initial default value is 90 degrees, which\n corresponds to 12 o'clock.  A value of zero corresponds to 3 o'clock...\n this is the encoding used by Java's Arc2D class.
org.jfree.chart.axis.NumberAxis.numberFormatOverride=Sets the number format override.  If this is non-null, then it will be\n used to format the numbers on the axis.
org.jfree.chart.plot.XYPlot.rangeCrosshairPaint=Sets the paint used to color the crosshairs (if visible) and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.JThermometer.tickFontStyle=Sets the tick font style.
org.jfree.chart.plot.CombinedDomainCategoryPlot.class=A combined category plot where the domain axis is shared.
org.jfree.chart.plot.ColorPalette.tickValues=Sets the tick values.
org.jfree.chart.plot.Plot.insets=Sets the insets for the plot and sends a {@link PlotChangeEvent} to\n all registered listeners.
org.jfree.chart.plot.CategoryPlot.rangeZeroBaselineVisible=Sets the flag that controls whether or not the zero baseline is\n displayed for the range axis, and sends a {@link PlotChangeEvent} to\n all registered listeners.
org.jfree.chart.axis.DateAxis.tickMarkPosition=Sets the tick mark position (start, middle or end of the time period)\n and sends an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYBarRenderer.useYInterval=Sets the flag that determines whether the y-interval from the dataset is\n used to calculate the length of each bar, and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.CategoryPlot.rangeCrosshairLockedOnData=Sets the flag indicating whether or not the range crosshair should\n "lock-on" to actual data values, and sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.category.GanttRenderer.endPercent=Sets the position of the end of the progress indicator, as a percentage\n of the bar width, and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.JThermometer.tickLabelFont=Sets the tick label font.
org.jfree.chart.plot.Crosshair.labelXOffset=Sets the x-offset and sends a property change event (with the name\n 'labelXOffset') to all registered listeners.
org.jfree.chart.renderer.xy.CandlestickRenderer.downPaint=Sets the paint used to fill candles when the price moves down from open\n to close and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.category.StatisticalBarRenderer.class=A renderer that handles the drawing a bar plot where\n each bar has a mean value and a standard deviation line.  The example shown\n here is generated by the <code>StatisticalBarChartDemo1.java</code> program\n included in the JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/StatisticalBarRendererSample.png"\n alt\="StatisticalBarRendererSample.png" />
org.jfree.chart.renderer.xy.XYShapeRenderer.class=A renderer that draws shapes at (x, y) coordinates and, if the dataset\n is an instance of {@link XYZDataset}, fills the shapes with a paint that\n is based on the z-value (the paint is obtained from a lookup table).  The\n renderer also allows for optional guidelines, horizontal and vertical lines\n connecting the shape to the edges of the plot.\n <br><br>\n The example shown here is generated by the\n <code>XYShapeRendererDemo1.java</code> program included in the JFreeChart\n demo collection\:\n <br><br>\n <img src\="../../../../../images/XYShapeRendererSample.png"\n alt\="XYShapeRendererSample.png" />\n <br><br>\n This renderer has similarities to, but also differences from, the\n {@link XYLineAndShapeRenderer}.
org.jfree.chart.plot.CategoryPlot.rangeGridlinePaint=Sets the paint used to draw the grid lines against the range axis and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYDifferenceRenderer.roundXCoordinates=Sets the flag that controls whether or not the x-coordinates (in\n Java2D space) are rounded to integer values, and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.CategoryItemRenderer.itemLabelPaint=Sets the item label paint for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.ColorPalette.inverse=Sets the inverse flag.
org.jfree.chart.renderer.xy.XYItemRenderer.baseStroke=Sets the base stroke and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.ThermometerPlot.padding=Sets the padding for the thermometer and sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.axis.SymbolAxis.gridBandPaint=Sets the grid band paint and sends an {@link AxisChangeEvent} to\n all registered listeners.
org.jfree.chart.axis.ColorBar.minimumValue=Sets the minimum value.
org.jfree.chart.axis.LogAxis.numberFormatOverride=Sets the number format override.  If this is non-null, then it will be\n used to format the numbers on the axis.
org.jfree.chart.renderer.xy.StandardXYItemRenderer.plotDiscontinuous=Sets the flag that controls whether or not the renderer shows\n discontinuous lines, and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.XYItemRenderer.seriesVisible=Sets the flag that controls the visibility of ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.  This flag\n overrides the per series and default settings - you must set it to\n <code>null</code> if you want the other settings to apply.
org.jfree.chart.plot.Marker.labelAnchor=Sets the label anchor and sends a {@link MarkerChangeEvent} to all\n registered listeners.  The anchor defines the position of the label\n anchor, relative to the bounds of the marker.
org.jfree.chart.renderer.xy.XYAreaRenderer2.legendArea=Sets the shape used as an area in each legend item and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.LineAndShapeRenderer.useFillPaint=Sets the flag that controls whether the fill paint is used to fill\n shapes, and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.ThermometerPlot.axisLocation=Sets the location at which the axis is displayed relative to the\n thermometer, and sends a {@link PlotChangeEvent} to all registered\n listeners.
org.jfree.chart.title.TextTitle.toolTipText=Sets the tool tip text to the specified text and sends a\n {@link TitleChangeEvent} to all registered listeners.
org.jfree.chart.plot.FastScatterPlot.rangePannable=Sets the flag that enables or disables panning of the plot along\n the range axes.
org.jfree.chart.plot.Plot.noDataMessageFont=Sets the font used to display the 'no data' message and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.Crosshair.labelPaint=Sets the label paint and sends a property change event (with the name\n 'labelPaint') to all registered listeners.
org.jfree.chart.JFreeChart.borderPaint=Sets the paint used to draw the chart border (if visible).
org.jfree.chart.renderer.xy.StandardXYItemRenderer.class=Standard item renderer for an {@link XYPlot}.  This class can draw (a)\n shapes at each point, or (b) lines between points, or (c) both shapes and\n lines.\n <P>\n This renderer has been retained for historical reasons and, in general, you\n should use the {@link XYLineAndShapeRenderer} class instead.
org.jfree.chart.plot.Plot.foregroundAlpha=Sets the alpha-transparency for the plot and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.simpleLabelOffset=Sets the offset for the simple labels and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.CategoryItemRenderer.shape=Sets the shape for ALL series (optional) and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.JFreeChart.notify=Sets a flag that controls whether or not listeners receive\n {@link ChartChangeEvent} notifications.
org.jfree.chart.plot.ContourPlot.rangeCrosshairValue=Sets the domain crosshair value.\n <P>\n Registered listeners are notified that the plot has been modified, but\n only if the crosshair is visible.
org.jfree.chart.renderer.category.BarRenderer.minimumBarLength=Sets the minimum bar length and sends a {@link RendererChangeEvent} to\n all registered listeners.  The minimum bar length is specified in Java2D\n units, and can be used to prevent bars that represent very small data\n values from disappearing when drawn on the screen.  Typically you would\n set this to (say) 0.5 or 1.0 Java 2D units.  Use this attribute with\n caution, however, because setting it to a non-zero value will\n artificially increase the length of bars representing small values,\n which may misrepresent your data.
org.jfree.chart.plot.Marker.class=The base class for markers that can be added to plots to highlight a value\n or range of values.\n <br><br>\n An event notification mechanism was added to this class in JFreeChart\n version 1.0.3.
org.jfree.chart.renderer.xy.XYSplineRenderer.class=A renderer that connects data points with natural cubic splines and/or\n draws shapes at each data point.  This renderer is designed for use with\n the {@link XYPlot} class. The example shown here is generated by the\n <code>XYSplineRendererDemo1.java</code> program included in the JFreeChart\n demo collection\:\n <br><br>\n <img src\="../../../../../images/XYSplineRendererSample.png"\n alt\="XYSplineRendererSample.png" />
org.jfree.chart.plot.IntervalMarker.startValue=Sets the start value for the marker and sends a\n {@link MarkerChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.ScatterRenderer.useOutlinePaint=Sets the flag that controls whether the outline paint is used for shape\n outlines, and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.category.GanttRenderer.incompletePaint=Sets the paint used to show the percentage incomplete and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.axis.SubCategoryAxis.subLabelFont=Sets the font used to display the sub-category labels and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.axis.ExtendedCategoryAxis.subLabelPaint=Sets the paint for the sublabels and sends an {@link AxisChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.CategoryPlot.rangeCrosshairPaint=Sets the paint used to draw the range crosshair (if visible) and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.drawOutlines=Sets the flag that controls whether outlines are drawn for\n shapes, and sends a {@link RendererChangeEvent} to all registered\n listeners.\n <P>\n In some cases, shapes look better if they do NOT have an outline, but\n this flag allows you to set your own preference.
org.jfree.chart.renderer.xy.XYItemRenderer.baseOutlineStroke=Sets the base outline stroke and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.renderer.xy.XYAreaRenderer2.outline=Sets a flag that controls whether or not outlines of the areas are\n drawn, and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.AbstractRenderer.itemLabelPaint=Sets the item label paint for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.axis.Axis.class=The base class for all axes in JFreeChart.  Subclasses are divided into\n those that display values ({@link ValueAxis}) and those that display\n categories ({@link CategoryAxis}).
org.jfree.chart.plot.JThermometer.valueLocation=Sets the location at which the temperature value is displayed.
org.jfree.chart.plot.CompassPlot.revolutionDistance=Sets the count to complete one revolution.  Can be arbitrarily set\n For degrees (the default) it is 360, for radians this is 2*Pi, etc
org.jfree.chart.axis.CyclicNumberAxis.advanceLineStroke=The advance line is the line drawn at the limit of the current cycle,\n when erasing the previous cycle.
org.jfree.chart.plot.JThermometer.valuePaint=Sets the value paint.
org.jfree.chart.plot.CombinedRangeCategoryPlot.orientation=Sets the orientation for the plot (and all the subplots).
org.jfree.chart.renderer.category.WaterfallBarRenderer.lastBarPaint=Sets the paint that will be used to draw the last bar and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.domainAxisLocation=Sets the location of the primary domain axis and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawLines=Sets the flag that controls whether or not lines are drawn to connect\n the items within a series and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.axis.PeriodAxis.minorTickMarkStroke=Sets the stroke used to display minor tick marks, if they are\n visible, and sends a {@link AxisChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.SpiderWebPlot.legendItemShape=Sets the shape used for legend items and sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.PiePlot.ignoreNullValues=Sets a flag that controls whether <code>null</code> values are ignored,\n and sends a {@link PlotChangeEvent} to all registered listeners.  At\n present, this only affects whether or not the key is presented in the\n legend.
org.jfree.chart.axis.CategoryAxis.categoryLabelPositions=Sets the category label position specification for the axis and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYItemRenderer.itemLabelPaint=Sets the item label paint for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.CandlestickRenderer.useOutlinePaint=Sets the flag that controls whether or not the renderer's outline\n paint is used to draw the candlestick outline, and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYItemRenderer.baseOutlinePaint=Sets the base outline paint and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.plot.PolarPlot.angleLabelFont=Sets the font used to display the angle labels and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.title.Title.horizontalAlignment=Sets the horizontal alignment for the title and sends a\n {@link TitleChangeEvent} to all registered listeners.
org.jfree.chart.plot.ThermometerPlot.class=A plot that displays a single value (from a {@link ValueDataset}) in a\n thermometer type display.\n <p>\n This plot supports a number of options\:\n <ol>\n <li>three sub-ranges which could be viewed as 'Normal', 'Warning'\n   and 'Critical' ranges.</li>\n <li>the thermometer can be run in two modes\:\n      <ul>\n      <li>fixed range, or</li>\n      <li>range adjusts to current sub-range.</li>\n      </ul>\n </li>\n <li>settable units to be displayed.</li>\n <li>settable display location for the value text.</li>\n </ol>
org.jfree.chart.axis.PeriodAxis.minorTickMarksVisible=Sets the flag that controls whether or not minor tick marks\n are displayed for the axis, and sends a {@link AxisChangeEvent}\n to all registered listeners.
org.jfree.chart.title.Title.visible=Sets a flag that controls whether or not the title should be drawn, and\n sends a {@link TitleChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.domainTickBandPaint=Sets the paint for the domain tick bands.
org.jfree.chart.plot.CombinedRangeCategoryPlot.gap=Sets the amount of space between subplots and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.CategoryItemRendererState.class=An object that retains temporary state information for a\n {@link CategoryItemRenderer}.
org.jfree.chart.plot.PiePlot3D.darkerSides=Sets a flag that controls whether or not the sides of the pie chart\n are rendered using a darker colour, and sends a {@link PlotChangeEvent}\n to all registered listeners.  This is only applied if the\n section colour is an instance of {@link java.awt.Color}.
org.jfree.chart.plot.XYPlot.class=A general class for plotting data in the form of (x, y) pairs.  This plot can\n use data from any class that implements the {@link XYDataset} interface.\n <P>\n <code>XYPlot</code> makes use of an {@link XYItemRenderer} to draw each point\n on the plot.  By using different renderers, various chart types can be\n produced.\n <p>\n The {@link org.jfree.chart.ChartFactory} class contains static methods for\n creating pre-configured charts.
org.jfree.chart.plot.PiePlot.sectionOutlineStroke=Sets the outline stroke for ALL sections in the plot.  If this is set to\n </code>null</code>, then a list of paints is used instead (to allow\n different colors to be used for each section).
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.useFillPaint=Sets the flag that controls whether the fill paint is used to fill\n shapes, and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.boxPaint=Sets the paint used to fill boxes and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.xy.StandardXYItemRenderer.plotLines=Sets the flag that controls whether or not a line is plotted between\n each data point and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.AbstractRenderer.paint=Sets the paint to be used for ALL series, and sends a\n {@link RendererChangeEvent} to all registered listeners.  If this is\n <code>null</code>, the renderer will use the paint for the series.
org.jfree.chart.renderer.category.LineAndShapeRenderer.linesVisible=Sets a flag that controls whether or not lines are drawn between the\n items in ALL series, and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.XYPlot.domainMinorGridlineStroke=Sets the stroke for the minor grid lines plotted against the domain\n axis, and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.LevelRenderer.itemMargin=Sets the item margin and sends a {@link RendererChangeEvent} to all\n registered listeners.  The value is expressed as a percentage of the\n available width for plotting all the bars, with the resulting amount to\n be distributed between all the bars evenly.
org.jfree.chart.axis.PeriodAxis.minorTickMarkInsideLength=Sets the inside length of the minor tick marks and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.StackedXYBarRenderer.renderAsPercentages=Sets the flag that controls whether the renderer displays each item\n value as a percentage (so that the stacked bars add to 100%), and sends\n a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.dataBoundsIncludesVisibleSeriesOnly=Sets the flag that controls whether or not the data bounds reported\n by this renderer will exclude non-visible series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.axis.Axis.labelAngle=Sets the angle for the label and sends an {@link AxisChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.XYItemRenderer.outlinePaint=Sets the outline paint for ALL series (optional).
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.useOutlinePaint=Sets the flag that controls whether the outline paint is used to draw\n shape outlines, and sends a {@link RendererChangeEvent} to all\n registered listeners.\n <p>\n Refer to <code>XYLineAndShapeRendererDemo2.java</code> to see the\n effect of this flag.
org.jfree.chart.plot.CombinedDomainXYPlot.gap=Sets the amount of space between subplots and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.rangeZeroBaselinePaint=Sets the paint for the zero baseline plotted against the range axis and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesStroke=Sets the flag that controls whether or not the series stroke list is\n automatically populated when {@link \#lookupSeriesStroke(int)} is called.
org.jfree.chart.renderer.xy.XYItemRenderer.outlineStroke=Sets the outline stroke for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.domainZeroBaselineStroke=Sets the stroke for the zero baseline for the domain axis,\n and sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.SymbolAxis.gridBandAlternatePaint=Sets the paint used for alternate grid bands and sends a\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.plot.MeterPlot.tickSize=Sets the tick size and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.PiePlot.legendItemShape=Sets the shape used for legend items and sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.axis.ValueAxis.rightArrow=Sets the shape that can be displayed as an arrow pointing rightwards at\n the end of an axis line and sends an {@link AxisChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.FastScatterPlot.rangeGridlineStroke=Sets the stroke for the grid lines plotted against the range axis and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.ScatterRenderer.useFillPaint=Sets the flag that controls whether the fill paint is used to fill\n shapes, and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.axis.DateAxis.minimumDate=Sets the minimum date visible on the axis and sends an\n {@link AxisChangeEvent} to all registered listeners.  If\n <code>date</code> is on or after the current maximum date for\n the axis, the maximum date will be shifted to preserve the current\n length of the axis.
org.jfree.chart.renderer.category.CategoryItemRenderer.basePaint=Sets the base paint and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.category.LineAndShapeRenderer.drawOutlines=Sets the flag that controls whether outlines are drawn for\n shapes, and sends a {@link RendererChangeEvent} to all registered\n listeners.\n <P>\n In some cases, shapes look better if they do NOT have an outline, but\n this flag allows you to set your own preference.
org.jfree.chart.renderer.xy.StandardXYItemRenderer.State.class=Records the state for the renderer.  This is used to preserve state\n information between calls to the drawItem() method for a single chart\n drawing.
org.jfree.chart.renderer.xy.XYDotRenderer.dotWidth=Sets the dot width and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.PiePlot.circular=A flag indicating whether the pie chart is circular, or stretched into\n an elliptical shape.
org.jfree.chart.renderer.xy.XYBarRenderer.XYBarRendererState.G2Base=Sets the range axis base in Java2D space.
org.jfree.chart.plot.ThermometerPlot.upperBound=Sets the upper bound for the thermometer.
org.jfree.chart.plot.XYPlot.rangeCrosshairValue=Sets the range crosshair value.\n <P>\n Registered listeners are notified that the plot has been modified, but\n only if the crosshair is visible.
org.jfree.chart.renderer.category.BarRenderer.itemMargin=Sets the item margin and sends a {@link RendererChangeEvent} to all\n registered listeners.  The value is expressed as a percentage of the\n available width for plotting all the bars, with the resulting amount to\n be distributed between all the bars evenly.
org.jfree.chart.renderer.category.ScatterRenderer.baseShapesFilled=Sets the base 'shapes filled' flag and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.title.Title.verticalAlignment=Sets the vertical alignment for the title, and notifies any registered\n listeners of the change.
org.jfree.chart.axis.DateAxis.dateFormatOverride=Sets the date format override.  If this is non-null, then it will be\n used to format the dates on the axis.
org.jfree.chart.plot.ThermometerPlot.columnRadius=Sets the column radius (in Java2D units) and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.IntervalMarker.class=Represents an interval to be highlighted in some way.
org.jfree.chart.renderer.category.BarRenderer3D.wallPaint=Sets the paint used to hightlight the left and bottom walls in the plot\n background, and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.CategoryPlot.domainCrosshairVisible=Sets the flag that controls whether or not the domain crosshair is\n displayed by the plot, and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.category.LineAndShapeRenderer.useSeriesOffset=Sets the flag that controls whether or not the x-position for each\n data item is offset within its category according to the series, and\n sends a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.CategoryStepRenderer.stagger=Sets the flag that controls whether or not the series steps are\n staggered and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.renderer.xy.XYItemRenderer.baseItemLabelPaint=Sets the base item label paint and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.category.StackedBarRenderer.class=A stacked bar renderer for use with the {@link CategoryPlot} class.\n The example shown here is generated by the\n <code>StackedBarChartDemo1.java</code> program included in the\n JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/StackedBarRendererSample.png"\n alt\="StackedBarRendererSample.png" />
org.jfree.chart.plot.SpiderWebPlot.axisLineStroke=Sets the stroke used to draw the axis lines and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYBarRenderer.class=A renderer that draws bars on an {@link XYPlot} (requires an\n {@link IntervalXYDataset}).  The example shown here is generated by the\n <code>XYBarChartDemo1.java</code> program included in the JFreeChart\n demo collection\:\n <br><br>\n <img src\="../../../../../images/XYBarRendererSample.png"\n alt\="XYBarRendererSample.png" />
org.jfree.chart.axis.LogarithmicAxis.autoRangeNextLogFlag=Sets the 'autoRangeNextLogFlag' flag.  This determines whether or\n not the 'autoAdjustRange()' method will select the next "10^n"\n values when determining the upper and lower bounds.  The default\n value is false.
org.jfree.chart.block.AbstractBlock.padding=Sets the padding (use {@link RectangleInsets\#ZERO_INSETS} for no\n padding).
org.jfree.chart.renderer.xy.XYShapeRenderer.guideLineStroke=Sets the stroke used to draw the guide lines and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYShapeRenderer.useFillPaint=Sets the flag that controls whether the fill paint is used to fill\n shapes, and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.Plot.notify=Sets a flag that controls whether or not listeners receive\n {@link PlotChangeEvent} notifications.
org.jfree.chart.axis.SegmentedTimeline.adjustForDaylightSaving=Sets the flag that controls whether or not the daylight saving adjustment\n is applied.
org.jfree.chart.plot.MeterPlot.meterAngle=Sets the angle (in degrees) for the whole range of the dial and sends\n a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.FastScatterPlot.paint=Sets the color for the data points and sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.axis.ValueAxis.lowerBound=Sets the lower bound for the axis range.  An {@link AxisChangeEvent} is\n sent to all registered listeners.
org.jfree.chart.plot.Marker.labelFont=Sets the label font and sends a {@link MarkerChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.MeterPlot.units=Sets the units for the dial and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.Marker.outlineStroke=Sets the outline stroke and sends a {@link MarkerChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.category.CategoryItemRenderer.itemLabelsVisible=Sets a flag that controls whether or not the item labels for ALL series\n are visible.
org.jfree.chart.plot.JThermometer.background=Sets the background color.
org.jfree.chart.JFreeChart.antiAlias=Sets a flag that indicates whether or not anti-aliasing is used when the\n chart is drawn.\n <P>\n Anti-aliasing usually improves the appearance of charts, but is slower.
org.jfree.chart.plot.Marker.alpha=Sets the alpha transparency that should be used when drawing the\n marker, and sends a {@link MarkerChangeEvent} to all registered\n listeners.  The alpha transparency is a value in the range 0.0f\n (completely transparent) to 1.0f (completely opaque).
org.jfree.chart.plot.Plot.outlineStroke=Sets the stroke used to outline the plot area and sends a\n {@link PlotChangeEvent} to all registered listeners. If you set this\n attribute to <code>null</code>, no outline will be drawn.
org.jfree.chart.plot.CrosshairState.datasetIndex=Sets the dataset index that the current crosshair values relate to.
org.jfree.chart.title.LegendTitle.itemPaint=Sets the item paint.
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.linesVisible=Sets a flag that controls whether or not lines are drawn between the\n items in ALL series, and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.Plot.noDataMessage=Sets the message that is displayed when the dataset is empty or\n <code>null</code>, and sends a {@link PlotChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.ThermometerPlot.showValueLines=Sets the display as to whether to show value lines in the output.
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.class=Renderer for drawing min max plot. This renderer draws all the series under\n the same category in the same x position using <code>objectIcon</code> and\n a line from the maximum value to the minimum value. For use with the\n {@link CategoryPlot} class. The example shown here is generated by\n the <code>MinMaxCategoryPlotDemo1.java</code> program included in the\n JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/MinMaxCategoryRendererSample.png"\n alt\="MinMaxCategoryRendererSample.png" />
org.jfree.chart.plot.CategoryPlot.rangeCrosshairValue=Sets the range crosshair value and, if the crosshair is visible, sends\n a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.MeterPlot.needlePaint=Sets the paint used to display the needle and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.PieLabelRecord.class=A structure that retains information about the label for a section in a pie\n chart.
org.jfree.chart.plot.CombinedRangeXYPlot.orientation=Sets the orientation for the plot (and all its subplots).
org.jfree.chart.renderer.category.LevelRenderer.maxItemWidth=Sets the maximum item width, which is specified as a percentage of the\n available space for all items, and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.title.Title.position=Sets the position for the title and sends a {@link TitleChangeEvent} to\n all registered listeners.
org.jfree.chart.plot.PiePlot.shadowYOffset=Sets the y-offset for the shadow effect and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.ValueAxis.autoRange=Sets a flag that determines whether or not the axis range is\n automatically adjusted to fit the data, and notifies registered\n listeners that the axis has been modified.
org.jfree.chart.renderer.xy.CandlestickRenderer.class=A renderer that draws candlesticks on an {@link XYPlot} (requires a\n {@link OHLCDataset}).  The example shown here is generated\n by the <code>CandlestickChartDemo1.java</code> program included in the\n JFreeChart demo collection\:\n <br><br>\n <img src\="../../../../../images/CandlestickRendererSample.png"\n alt\="CandlestickRendererSample.png" />\n <P>\n This renderer does not include code to calculate the crosshair point for the\n plot.
org.jfree.chart.plot.PiePlot.labelLinksVisible=Sets the flag that controls whether or not label linking lines are\n visible and sends a {@link PlotChangeEvent} to all registered listeners.\n Please take care when hiding the linking lines - depending on the data\n values, the labels can be displayed some distance away from the\n corresponding pie section.
org.jfree.chart.axis.ValueAxis.negativeArrowVisible=Sets a flag that controls whether or not the axis lines has an arrow\n drawn that points in the negative direction for the axis, and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYItemRenderer.basePaint=Sets the base paint and sends a {@link RendererChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.CandlestickRenderer.volumePaint=Sets the paint used to fill the volume bars, and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.fillBox=Sets the flag that controls whether or not the box is filled and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.JFreeChart.padding=Sets the padding between the chart border and the chart drawing area,\n and sends a {@link ChartChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYBarRenderer.base=Sets the base value for the bars and sends a {@link RendererChangeEvent}\n to all registered listeners.  The base value is not used if the dataset's\n y-interval is being used to determine the bar length.
org.jfree.chart.plot.ThermometerPlot.valueFont=Sets the font used to display the current value.
org.jfree.chart.renderer.category.CategoryStepRenderer.class=A "step" renderer similar to {@link XYStepRenderer} but\n that can be used with the {@link CategoryPlot} class.  The example shown\n here is generated by the <code>CategoryStepChartDemo1.java</code> program\n included in the JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/CategoryStepRendererSample.png"\n alt\="CategoryStepRendererSample.png" />
org.jfree.chart.plot.CrosshairState.crosshairDistance=Sets the distance between the anchor point and the current crosshair\n point.  As each data point is processed, its distance to the anchor\n point is compared with this value and, if it is closer, the data point\n becomes the new crosshair point.
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.legendLine=Sets the shape used as a line in each legend item and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.JThermometer.showValueLines=Sets the flag that controls whether or not value lines are displayed.
org.jfree.chart.plot.XYPlot.domainZeroBaselinePaint=Sets the paint for the zero baseline plotted against the domain axis and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.axis.AxisSpace.top=Sets the space reserved for axes at the top of the plot area.
org.jfree.chart.axis.ValueAxis.upArrow=Sets the shape that can be displayed as an arrow pointing upwards at\n the end of an axis line and sends an {@link AxisChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.SpiderWebPlot.interiorGap=Sets the interior gap and sends a {@link PlotChangeEvent} to all\n registered listeners. This controls the space between the edges of the\n plot and the plot area itself (the region where the axis labels appear).
org.jfree.chart.plot.CategoryPlot.rangeCrosshairStroke=Sets the pen-style (<code>Stroke</code>) used to draw the range\n crosshair (if visible), and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.block.AbstractBlock.height=Sets the natural width of the block, if this is known in advance.
org.jfree.chart.plot.Crosshair.visible=Sets the flag that controls the visibility of the crosshair and sends\n a proerty change event (with the name 'visible') to all registered\n listeners.
org.jfree.chart.renderer.xy.XYItemRendererState.processVisibleItemsOnly=Sets the flag that controls whether the plot passes all data\n items in each series to the renderer, or just the visible items.
org.jfree.chart.renderer.category.ScatterRenderer.drawOutlines=Sets the flag that controls whether outlines are drawn for\n shapes, and sends a {@link RendererChangeEvent} to all registered\n listeners.\n <p/>\n In some cases, shapes look better if they do NOT have an outline, but\n this flag allows you to set your own preference.
org.jfree.chart.axis.Axis.axisLineStroke=Sets the stroke used to draw the axis line and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.axis.LogarithmicAxis.class=A numerical axis that uses a logarithmic scale.
org.jfree.chart.axis.ValueAxis.lowerMargin=Sets the lower margin for the axis (as a percentage of the axis range)\n and sends an {@link AxisChangeEvent} to all registered listeners.  This\n margin is added only when the axis range is auto-calculated - if you set\n the axis range manually, the margin is ignored.
org.jfree.chart.renderer.category.CategoryItemRenderer.baseOutlinePaint=Sets the base outline paint and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.axis.ColorBar.maximumValue=Sets the maximum value.
org.jfree.chart.renderer.category.LineAndShapeRenderer.baseShapesVisible=Sets the base 'shapes visible' flag and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.renderer.category.LineAndShapeRenderer.shapesVisible=Sets the 'shapes visible' for ALL series and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.JFreeChart.backgroundImageAlignment=Sets the background alignment.  Alignment options are defined by the\n {@link org.jfree.ui.Align} class.
org.jfree.chart.plot.PiePlot.labelFont=Sets the section label font and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.PiePlot.sectionOutlinePaint=Sets the outline paint for ALL sections in the plot.  If this is set to\n </code>null</code>, then a list of paints is used instead (to allow\n different colors to be used for each section).
org.jfree.chart.plot.SpiderWebPlot.seriesOutlineStroke=Sets the outline stroke for ALL series in the plot. If this is set to\n </code> null</code>, then a list of paints is used instead (to allow\n different colors to be used for each series).
org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.State.class=Records the state for the renderer.  This is used to preserve state\n information between calls to the drawItem() method for a single chart\n drawing.
org.jfree.chart.renderer.xy.XYShapeRenderer.guideLinePaint=Sets the paint used to draw the guide lines and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.axis.Axis.tickLabelInsets=Sets the insets for the tick labels and sends an {@link AxisChangeEvent}\n to all registered listeners.
org.jfree.chart.axis.ValueAxis.minorTickCount=Sets the number of minor tick marks to display, and sends an\n {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.baseSectionOutlineStroke=Sets the base section stroke.
org.jfree.chart.axis.CyclicNumberAxis.advanceLinePaint=The advance line is the line drawn at the limit of the current cycle,\n when erasing the previous cycle.
org.jfree.chart.renderer.category.CategoryItemRenderer.baseItemLabelFont=Sets the base item label font and sends a {@link RendererChangeEvent}\n to all registered listeners.
org.jfree.chart.plot.ContourPlot.rangeCrosshairStroke=Sets the Stroke used to draw the crosshairs (if visible) and notifies\n registered listeners that the axis has been modified.
org.jfree.chart.plot.SpiderWebPlot.seriesPaint=Sets the paint for ALL series in the plot. If this is set to</code> null\n </code>, then a list of paints is used instead (to allow different colors\n to be used for each series of the radar group).
org.jfree.chart.plot.JThermometer.class=An initial quick and dirty.  The concept behind this class would be to\n generate a gui bean that could be used within JBuilder, Netbeans etc...
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.class=A renderer that draws shapes for each data item, and lines between data\n items.  Each point has a mean value and a standard deviation line. For use\n with the {@link CategoryPlot} class.  The example shown\n here is generated by the <code>StatisticalLineChartDemo1.java</code> program\n included in the JFreeChart Demo Collection\:\n <br><br>\n <img src\="../../../../../images/StatisticalLineRendererSample.png"\n alt\="StatisticalLineRendererSample.png" />
org.jfree.chart.plot.XYPlot.domainCrosshairPaint=Sets the paint used to draw the crosshairs (if visible) and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYShapeRenderer.drawOutlines=Sets the flag that controls whether outlines are drawn for\n shapes, and sends a {@link RendererChangeEvent} to all registered\n listeners.\n <P>\n In some cases, shapes look better if they do NOT have an outline, but\n this flag allows you to set your own preference.
org.jfree.chart.plot.ColorPalette.maxZ=Sets the maximum Z value.
org.jfree.chart.renderer.xy.XYStepRenderer.class=Line/Step item renderer for an {@link XYPlot}.  This class draws lines\n between data points, only allowing horizontal or vertical lines (steps).\n The example shown here is generated by the\n <code>XYStepRendererDemo1.java</code> program included in the JFreeChart\n demo collection\:\n <br><br>\n <img src\="../../../../../images/XYStepRendererSample.png"\n alt\="XYStepRendererSample.png" />
org.jfree.chart.JFreeChart.class=A chart class implemented using the Java 2D APIs.  The current version\n supports bar charts, line charts, pie charts and xy plots (including time\n series data).\n <P>\n JFreeChart coordinates several objects to achieve its aim of being able to\n draw a chart on a Java 2D graphics device\: a list of {@link Title} objects\n (which often includes the chart's legend), a {@link Plot} and a\n {@link org.jfree.data.general.Dataset} (the plot in turn manages a\n domain axis and a range axis).\n <P>\n You should use a {@link ChartPanel} to display a chart in a GUI.\n <P>\n The {@link ChartFactory} class contains static methods for creating\n 'ready-made' charts.
org.jfree.chart.renderer.xy.XYDifferenceRenderer.legendLine=Sets the shape used as a line in each legend item and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.SpiderWebPlot.maxValue=Sets the maximum value any category axis can take and sends\n a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.interiorGap=Sets the interior gap and sends a {@link PlotChangeEvent} to all\n registered listeners.  This controls the space between the edges of the\n pie plot and the plot area itself (the region where the section labels\n appear).
org.jfree.chart.plot.Marker.paint=Sets the paint and sends a {@link MarkerChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.SpiderWebPlot.baseSeriesOutlinePaint=Sets the base series paint.
org.jfree.chart.axis.Axis.visible=Sets a flag that controls whether or not the axis is visible and sends\n an {@link AxisChangeEvent} to all registered listeners.
org.jfree.chart.plot.PolarPlot.angleGridlinePaint=Sets the paint for the grid lines plotted against the angular axis.\n <p>\n If you set this to <code>null</code>, no grid lines will be drawn.
org.jfree.chart.plot.PiePlot.labelLinkMargin=Sets the link margin and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.plot.FastScatterPlot.data=Sets the data array used by the plot and sends a {@link PlotChangeEvent}\n to all registered listeners.
org.jfree.chart.renderer.xy.XYItemRenderer.baseItemLabelsVisible=Sets the base setting for item label visibility.
org.jfree.chart.renderer.AbstractRenderer.baseFillPaint=Sets the base fill paint and sends a {@link RendererChangeEvent} to\n all registered listeners.
org.jfree.chart.plot.XYPlot.domainGridlinePaint=Sets the paint for the grid lines plotted against the domain axis, and\n sends a {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.renderer.xy.XYBlockRenderer.blockWidth=Sets the width of the blocks used to represent each data item and\n sends a {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.weight=Sets the weight for the plot and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.xy.XYLine3DRenderer.wallPaint=Sets the paint used to hightlight the left and bottom walls in the plot\n background and sends a {@link RendererChangeEvent} to all registered\n listeners.
org.jfree.chart.plot.CombinedDomainCategoryPlot.gap=Sets the amount of space between subplots and sends a\n {@link PlotChangeEvent} to all registered listeners.
org.jfree.chart.plot.PiePlot.baseSectionPaint=Sets the base section paint and sends a {@link PlotChangeEvent} to all\n registered listeners.
org.jfree.chart.renderer.category.LineAndShapeRenderer.baseLinesVisible=Sets the base 'lines visible' flag and sends a\n {@link RendererChangeEvent} to all registered listeners.
org.jfree.chart.plot.XYPlot.rangeMinorGridlinesVisible=Sets the flag that controls whether or not the range axis minor grid\n lines are visible.\n <p>\n If the flag value is changed, a {@link PlotChangeEvent} is sent to all\n registered listeners.
org.jfree.chart.axis.CategoryAxis.lowerMargin=Sets the lower margin for the axis and sends an {@link AxisChangeEvent}\n to all registered listeners.
